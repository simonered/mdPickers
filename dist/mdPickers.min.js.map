{"version":3,"sources":["mdPickers.min.js"],"names":["TimePickerCtrl","$scope","$mdDialog","$mdMedia","time","autoSwitch","useUtc","utcOffset","self","this","VIEW_HOURS","VIEW_MINUTES","currentView","init","normalizeMoment","clockHours","parseInt","format","clockMinutes","minutes","m","skipNull","moment","utc","switchView","setAM","hours","hour","setPM","now","cancel","confirm","hide","toDate","ClockCtrl","TYPE_HOURS","TYPE_MINUTES","STEP_DEG","steps","CLOCK_TYPES","range","getPointerStyle","divider","type","degrees","Math","round","selected","-webkit-transform","-ms-transform","transform","setTimeByDeg","deg","setTime","i","push","DatePickerCtrl","$timeout","currentDate","minDate","maxDate","selectingYear","currentMoment","minMoment","maxMoment","isBefore","add","isAfter","year","startYear","yearItems","currentIndex_","PAGE_SIZE","START","getItemAtIndex","index","getLength","floor","isMoment","month","date","selectYear","animate","showYear","yearTopIndex","showCalendar","today","isTodayAvailable","minValid","maxValid","isSameOrAfter","isSameOrBefore","animating","angular","noop","then","CalendarCtrl","weekDays","weekdaysMin","daysInMonth","updateDaysInMonth","days","firstDay","day","viewDays","ceil","arr","n","valid","isValidDay","selectDate","dom","nextMonth","prevMonth","subtract","module","directive","$animate","restrict","bindToController","replace","template","controller","controllerAs","link","scope","element","attrs","ctrl","timepickerCtrl","querySelector","$parent","timepicker","onEvent","event","containerCoords","currentTarget","getClientRects","x","offsetWidth","pageX","left","y","pageY","top","offsetHeight","atan2","PI","indexOf","on","e","off","$on","provider","LABEL_OK","LABEL_CANCEL","LABEL_NOW","setOKButtonLabel","label","setCancelButtonLabel","setNowButtonLabel","$get","timePicker","options","isDate","isObject","show","clickOutsideToClose","targetEvent","locals","skipHide","$mdpTimePicker","require","transclude","noFloat","isDefined","mdpNoFloat","placeholder","mdpPlaceholder","openOnClick","mdpOpenOnClick","mdpDisabled","timeFormat","disabled","ngModel","$transclude","updateInputElement","value","inputElement","inputContainerCtrl","setHasValue","$isEmpty","updateTime","strValue","isValid","$setViewValue","$pristine","messages","hasClass","inputContainer","removeClass","$render","onInputElementEvents","target","$viewVaue","clone","append","$watch","$error","newValue","oldValue","setInvalid","Object","keys","length","$formatters","unshift","$validators","modelValue","viewValue","required","isUndefined","$parsers","parsed","$modelValue","originalModel","seconds","showPicker","ev","useMobile","detect","parse","navigator","userAgent","device","toLowerCase","LABEL_TODAY","datePicker","datepickerCtrl","datepicker","animElements","map","a","direction","addClass","$mdpDatePicker","readonly","preventDefault","selectedDate","selectedMoment","$setValidity"],"mappings":"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","file":"mdPickers.min.js","sourcesContent":["(function() {\n\"use strict\";\nvar module = angular.module(\"mdPickers\", [\n\t\"ngMaterial\",\n\t\"ngAnimate\",\n\t\"ngAria\"\n]); \nfunction TimePickerCtrl($scope, $mdDialog, $mdMedia, time, autoSwitch, useUtc, utcOffset) {\n\t$scope.$mdMedia = $mdMedia;\n\t\n\tvar self = this;\n\t\n\tthis.VIEW_HOURS = 1;\n    this.VIEW_MINUTES = 2;\n    this.currentView = this.VIEW_HOURS;\n    this.autoSwitch = !!autoSwitch;\n    \n\tthis.init = function() {\n\t\t// normalize time\n    \tthis.time = this.normalizeMoment(time);\n    \tthis.clockHours = parseInt(this.time.format(\"h\"));\n        this.clockMinutes = parseInt(this.time.minutes());\t\t\n\t};\n\t\n\tthis.normalizeMoment = function(m, skipNull) {\n    \tif (!m) {\n    \t\tif (skipNull) {\n    \t\t\treturn undefined;\n    \t\t}\n    \t\t\n    \t\tm = (useUtc || utcOffset) ? moment().utc(true) : moment();\n    \t}\n    \t\n    \tif (useUtc) {\n    \t\tm = moment(m).utc();\n    \t\n    \t} else if (utcOffset) {\n    \t\tm = moment(m).utcOffset(utcOffset);\n    \t}\n    \t\n    \treturn m;\n    };\n\t\t\n\tthis.switchView = function() {\n\t    self.currentView = self.currentView == self.VIEW_HOURS ? self.VIEW_MINUTES : self.VIEW_HOURS;\n\t};\n    \n\tthis.setAM = function() {\n        if(self.time.hours() >= 12)\n            self.time.hour(self.time.hour() - 12);\n\t};\n    \n    this.setPM = function() {\n        if(self.time.hours() < 12)\n            self.time.hour(self.time.hour() + 12);\n\t};\n\t\n\tthis.now = function() {\n\t\tself.time = this.normalizeMoment(moment());\n\t};\n    \n    this.cancel = function() {\n        $mdDialog.cancel();\n    };\n\n    this.confirm = function() {\n        $mdDialog.hide(this.time.toDate());\n    };\n    \n    // init\n    this.init();\n}\n\nfunction ClockCtrl($scope) {\n    var TYPE_HOURS = \"hours\";\n    var TYPE_MINUTES = \"minutes\";\n    var self = this;\n    \n    this.STEP_DEG = 360 / 12;\n    this.steps = [];\n    \n    this.CLOCK_TYPES = {\n        \"hours\": {\n            range: 12,\n        },\n        \"minutes\": {\n            range: 60,\n        }\n    }\n    \n    this.getPointerStyle = function() {\n        var divider = 1;\n        switch(self.type) {\n            case TYPE_HOURS:\n                divider = 12;\n                break;\n            case TYPE_MINUTES:\n                divider = 60;\n                break;\n        }  \n        var degrees = Math.round(self.selected * (360 / divider)) - 180;\n        return { \n            \"-webkit-transform\": \"rotate(\" + degrees + \"deg)\",\n            \"-ms-transform\": \"rotate(\" + degrees + \"deg)\",\n            \"transform\": \"rotate(\" + degrees + \"deg)\"\n        }\n    };\n    \n    this.setTimeByDeg = function(deg) {\n        deg = deg >= 360 ? 0 : deg;\n        var divider = 0;\n        switch(self.type) {\n            case TYPE_HOURS:\n                divider = 12;\n                break;\n            case TYPE_MINUTES:\n                divider = 60;\n                break;\n        }  \n        \n        self.setTime(\n            Math.round(divider / 360 * deg)\n        );\n    };\n    \n    this.setTime = function(time) {\n        this.selected = time;\n        \n        switch(self.type) {\n            case TYPE_HOURS:\n                if(self.time.format(\"A\") == \"PM\") time += 12;\n                this.time.hours(time);\n                break;\n            case TYPE_MINUTES:\n                if(time > 59) time -= 60;\n                this.time.minutes(time);\n                break;\n        }\n        \n    };\n    \n    this.init = function() {\n        self.type = self.type || \"hours\";\n        switch(self.type) {\n            case TYPE_HOURS:\n                for(var i = 1; i <= 12; i++)\n                    self.steps.push(i);\n                self.selected = self.time.hours() || 0;\n                if(self.selected > 12) self.selected -= 12;\n                    \n                break;\n            case TYPE_MINUTES:\n                for(var i = 5; i <= 55; i+=5)\n                    self.steps.push(i);\n                self.steps.push(0);\n                self.selected = self.time.minutes() || 0;\n                \n                break;\n        }\n    };\n    \n    this.init();\n}\n\nmodule.directive(\"mdpClock\", [\"$animate\", \"$timeout\", function($animate, $timeout) {\n    return {\n        restrict: 'E',\n        bindToController: {\n            'type': '@?',\n            'time': '=',\n            'autoSwitch': '=?'\n        },\n        replace: true,\n        template: '<div class=\"mdp-clock\">' +\n                        '<div class=\"mdp-clock-container\">' +\n                            '<md-toolbar class=\"mdp-clock-center md-primary\"></md-toolbar>' +\n                            '<md-toolbar ng-style=\"clock.getPointerStyle()\" class=\"mdp-pointer md-primary\">' +\n                                '<span class=\"mdp-clock-selected md-button md-raised md-primary\"></span>' +\n                            '</md-toolbar>' +\n                            '<md-button ng-class=\"{ \\'md-primary\\': clock.selected == step }\" class=\"md-icon-button md-raised mdp-clock-deg{{ ::(clock.STEP_DEG * ($index + 1)) }}\" ng-repeat=\"step in clock.steps\" ng-click=\"clock.setTime(step)\">{{ step }}</md-button>' +\n                        '</div>' +\n                    '</div>',\n        controller: [\"$scope\", ClockCtrl],\n        controllerAs: \"clock\",\n        link: function(scope, element, attrs, ctrl) {\n            var pointer = angular.element(element[0].querySelector(\".mdp-pointer\")),\n                timepickerCtrl = scope.$parent.timepicker;\n            \n            var onEvent = function(event) {\n                var containerCoords = event.currentTarget.getClientRects()[0];\n                var x = ((event.currentTarget.offsetWidth / 2) - (event.pageX - containerCoords.left)),\n                    y = ((event.pageY - containerCoords.top) - (event.currentTarget.offsetHeight / 2));\n\n                var deg = Math.round((Math.atan2(x, y) * (180 / Math.PI)));\n                $timeout(function() {\n                    ctrl.setTimeByDeg(deg + 180);\n                    if(ctrl.autoSwitch && [\"mouseup\", \"click\"].indexOf(event.type) !== -1 && timepickerCtrl) timepickerCtrl.switchView();\n                });\n            }; \n            \n            element.on(\"mousedown\", function() {\n               element.on(\"mousemove\", onEvent);\n            });\n            \n            element.on(\"mouseup\", function(e) {\n                element.off(\"mousemove\");\n            });\n            \n            element.on(\"click\", onEvent);\n            scope.$on(\"$destroy\", function() {\n                element.off(\"click\", onEvent);\n                element.off(\"mousemove\", onEvent); \n            });\n        }\n    }\n}]);\n\nmodule.provider(\"$mdpTimePicker\", function() {\n    var LABEL_OK = \"OK\",\n        LABEL_CANCEL = \"Cancel\",\n        LABEL_NOW = \"Now\";\n        \n    this.setOKButtonLabel = function(label) {\n        LABEL_OK = label;\n    };\n    \n    this.setCancelButtonLabel = function(label) {\n        LABEL_CANCEL = label;\n    };\n    \n    this.setNowButtonLabel = function(label) {\n    \tLABEL_NOW = label;\n    };\n    \n    this.$get = [\"$mdDialog\", function($mdDialog) {\n        var timePicker = function(time, options) {\n            if(!angular.isDate(time)) time = null;\n            if (!angular.isObject(options)) options = {};\n    \n            return $mdDialog.show({\n                controller:  ['$scope', '$mdDialog', '$mdMedia', 'time', 'autoSwitch', 'useUtc', 'utcOffset', TimePickerCtrl],\n                controllerAs: 'timepicker',\n                clickOutsideToClose: true,\n                template: '<md-dialog aria-label=\"\" class=\"mdp-timepicker\" ng-class=\"{ \\'portrait\\': !$mdMedia(\\'gt-xs\\') }\">' +\n                            '<md-dialog-content layout-gt-xs=\"row\" layout-wrap>' +\n                                '<md-toolbar layout-gt-xs=\"column\" layout-xs=\"row\" layout-align=\"center center\" flex class=\"mdp-timepicker-time md-hue-1 md-primary\">' +\n                                    '<div class=\"mdp-timepicker-selected-time\">' +\n                                        '<span ng-class=\"{ \\'active\\': timepicker.currentView == timepicker.VIEW_HOURS }\" ng-click=\"timepicker.currentView = timepicker.VIEW_HOURS\">{{ timepicker.time.format(\"h\") }}</span>:' + \n                                        '<span ng-class=\"{ \\'active\\': timepicker.currentView == timepicker.VIEW_MINUTES }\" ng-click=\"timepicker.currentView = timepicker.VIEW_MINUTES\">{{ timepicker.time.format(\"mm\") }}</span>' +\n                                    '</div>' +\n                                    '<div layout=\"column\" class=\"mdp-timepicker-selected-ampm\">' + \n                                        '<span ng-click=\"timepicker.setAM()\" ng-class=\"{ \\'active\\': timepicker.time.hours() < 12 }\">AM</span>' +\n                                        '<span ng-click=\"timepicker.setPM()\" ng-class=\"{ \\'active\\': timepicker.time.hours() >= 12 }\">PM</span>' +\n                                    '</div>' + \n                                '</md-toolbar>' +\n                                '<div>' +\n                                    '<div class=\"mdp-clock-switch-container\" ng-switch=\"timepicker.currentView\" layout layout-align=\"center center\">' +\n\t                                    '<mdp-clock class=\"mdp-animation-zoom\" auto-switch=\"timepicker.autoSwitch\" time=\"timepicker.time\" type=\"hours\" ng-switch-when=\"1\"></mdp-clock>' +\n\t                                    '<mdp-clock class=\"mdp-animation-zoom\" auto-switch=\"timepicker.autoSwitch\" time=\"timepicker.time\" type=\"minutes\" ng-switch-when=\"2\"></mdp-clock>' +\n                                    '</div>' +\n                                    \n                                    '<md-dialog-actions layout=\"row\">' +\n                                    \t'<md-button ng-click=\"timepicker.now()\" aria-label=\"' + LABEL_NOW + '\">' + LABEL_NOW + '</md-button>' +\n\t                                \t'<span flex></span>' +\n                                        '<md-button ng-click=\"timepicker.cancel()\" aria-label=\"' + LABEL_CANCEL + '\">' + LABEL_CANCEL + '</md-button>' +\n                                        '<md-button ng-click=\"timepicker.confirm()\" class=\"md-primary\" aria-label=\"' + LABEL_OK + '\">' + LABEL_OK + '</md-button>' +\n                                    '</md-dialog-actions>' +\n                                '</div>' +\n                            '</md-dialog-content>' +\n                        '</md-dialog>',\n                targetEvent: options.targetEvent,\n                locals: {\n                    time: time,\n                    autoSwitch: options.autoSwitch,\n                    useUtc: options.useUtc, \n                    utcOffset: options.utcOffset\n                },\n                skipHide: true\n            });\n        };\n    \n        return timePicker;\n    }];\n});\n\nmodule.directive(\"mdpTimePicker\", [\"$mdpTimePicker\", \"$timeout\", function($mdpTimePicker, $timeout) {\n    return  {\n        restrict: 'E',\n        require: 'ngModel',\n        transclude: true,\n        template: function(element, attrs) {\n            var noFloat = angular.isDefined(attrs.mdpNoFloat),\n                placeholder = angular.isDefined(attrs.mdpPlaceholder) ? attrs.mdpPlaceholder : \"\",\n                openOnClick = angular.isDefined(attrs.mdpOpenOnClick) ? true : false;\n            \n            return '<div layout layout-align=\"start start\">' +\n                    '<md-button class=\"md-icon-button\" ng-click=\"showPicker($event)\"' + (angular.isDefined(attrs.mdpDisabled) ? ' ng-disabled=\"disabled\"' : '') + '>' +\n                        '<md-icon md-svg-icon=\"mdp-access-time\"></md-icon>' +\n                    '</md-button>' +\n                    '<md-input-container' + (noFloat ? ' md-no-float' : '') + ' md-is-error=\"isError()\">' +\n                        '<input type=\"{{ ::type }}\"' + (angular.isDefined(attrs.mdpDisabled) ? ' ng-disabled=\"disabled\"' : '') + ' aria-label=\"' + placeholder + '\" placeholder=\"' + placeholder + '\"' + (openOnClick ? ' ng-click=\"showPicker($event)\" ' : '') + ' />' +\n                    '</md-input-container>' +\n                '</div>';\n        },\n        scope: {\n            \"timeFormat\": \"@mdpFormat\",\n            \"placeholder\": \"@mdpPlaceholder\",\n            \"autoSwitch\": \"=?mdpAutoSwitch\",\n            \"disabled\": \"=?mdpDisabled\",\n            \"useUtc\" : \"=mdpUseUtc\",\n            \"utcOffset\" : \"=mdpUtcOffset\"\n        },\n        link: function(scope, element, attrs, ngModel, $transclude) {\n            var inputElement = angular.element(element[0].querySelector('input')),\n                inputContainer = angular.element(element[0].querySelector('md-input-container')),\n                inputContainerCtrl = inputContainer.controller(\"mdInputContainer\");\n                \n            $transclude(function(clone) {\n               inputContainer.append(clone); \n            });\n            \n            var messages = angular.element(inputContainer[0].querySelector(\"[ng-messages]\"));\n            \n            scope.type = scope.timeFormat ? \"text\" : \"time\"\n            scope.timeFormat = scope.timeFormat || \"HH:mm\";\n            scope.autoSwitch = scope.autoSwitch || false;\n            scope.useUtc = scope.useUtc || false;\n            \n            scope.$watch(function() { return ngModel.$error }, function(newValue, oldValue) {\n                inputContainerCtrl.setInvalid(!ngModel.$pristine && !!Object.keys(ngModel.$error).length);\n            }, true);\n            \n            // update input element if model has changed\n            ngModel.$formatters.unshift(function(value) {\n                var time = angular.isDate(value) && moment(value);\n                if(time && time.isValid()) \n                    updateInputElement(time.format(scope.timeFormat));\n                else\n                    updateInputElement(null);\n            });\n            \n            ngModel.$validators.format = function(modelValue, viewValue) {\n                return !viewValue || angular.isDate(viewValue) || moment(viewValue, scope.timeFormat, true).isValid();\n            };\n            \n            ngModel.$validators.required = function(modelValue, viewValue) {\n                return angular.isUndefined(attrs.required) || !ngModel.$isEmpty(modelValue) || !ngModel.$isEmpty(viewValue);\n            };\n            \n            ngModel.$parsers.unshift(function(value) {\n                var parsed = moment(value, scope.timeFormat, true);\n                if(parsed.isValid()) {\n                    if(angular.isDate(ngModel.$modelValue)) {\n                        var originalModel = moment(ngModel.$modelValue);\n                        originalModel.minutes(parsed.minutes());\n                        originalModel.hours(parsed.hours());\n                        originalModel.seconds(parsed.seconds());\n                        \n                        parsed = originalModel;\n                    }\n                    return parsed.toDate(); \n                } else\n                    return null;\n            });\n            \n            // update input element value\n            function updateInputElement(value) {\n                inputElement[0].value = value;\n                inputContainerCtrl.setHasValue(!ngModel.$isEmpty(value));\n            }\n            \n            function normalizeMoment(m) {\n            \tif (!m) {\n            \t\treturn undefined;\n            \t}\n            \t\n            \tif (scope.useUtc) {\n            \t\tm = moment(m).utc();\n            \t\n            \t} else if (scope.utcOffset) {\n            \t\tm = moment(m).utcOffset(scope.utcOffset);\n            \t}\n            \t\n            \treturn m;\n            };\n            \n            function updateTime(time) {\n                var value = normalizeMoment(moment(time, angular.isDate(time) ? null : scope.timeFormat, true)),\n                    strValue = value.format(scope.timeFormat);\n\n                if(value.isValid()) {\n                    updateInputElement(strValue);\n                    ngModel.$setViewValue(strValue);\n                } else {\n                    updateInputElement(time);\n                    ngModel.$setViewValue(time);\n                }\n                \n                if(!ngModel.$pristine && \n                    messages.hasClass(\"md-auto-hide\") && \n                    inputContainer.hasClass(\"md-input-invalid\")) messages.removeClass(\"md-auto-hide\");\n                \n                ngModel.$render();\n            }\n                \n            scope.showPicker = function(ev) {\n                $mdpTimePicker(ngModel.$modelValue, {\n                    targetEvent: ev,\n                    autoSwitch: scope.autoSwitch,\n                    useUtc: scope.useUtc,\n                    utcOffset: scope.utcOffset\n                    \n                }).then(function(time) {\n                    updateTime(time, true);\n                });\n            };\n            \n            function onInputElementEvents(event) {\n                if(event.target.value !== ngModel.$viewVaue)\n                    updateTime(event.target.value);\n            }\n            \n            inputElement.on(\"reset input blur\", onInputElementEvents);\n            \n            scope.$on(\"$destroy\", function() {\n                inputElement.off(\"reset input blur\", onInputElementEvents);\n            })\n        }\n    };\n}]);\n\nmodule.directive(\"mdpTimePicker\", [\"$mdpTimePicker\", \"$timeout\", function($mdpTimePicker, $timeout) {\n    return  {\n        restrict: 'A',\n        require: 'ngModel',\n        scope: {\n            \"timeFormat\": \"@mdpFormat\",\n            \"useMobile\" : \"=mdpUseMobile\",\n        \t\"autoSwitch\" : \"=?mdpAutoSwitch\",\n        \t\"useUtc\" : \"=mdpUseUtc\",\n            \"utcOffset\" : \"=mdpUtcOffset\"\n        },\n        link: function(scope, element, attrs, ngModel, $transclude) {\n        \tif ('undefined' !== typeof attrs.type && 'time' === attrs.type && ngModel \n        \t\t\t&& 'undefined' !== typeof scope.useMobile && scope.useMobile && detect.parse(navigator.userAgent).device.type.toLowerCase() === \"mobile\") {\n        \t\t// use mobile-system default picker\n        \t\t\n        \t} else {        \t\n\t            scope.timeFormat = scope.timeFormat || \"HH:mm\";\n\t            scope.autoSwitch = scope.autoSwitch || false;\n\t            scope.useUtc = scope.useUtc || false;\n\t            \n\t            var showPicker = function(ev) {\n\t                $mdpTimePicker(ngModel.$modelValue, {\n\t                    targetEvent: ev,\n\t                    autoSwitch: scope.autoSwitch,\n\t                    useUtc: scope.useUtc,\n\t                    utcOffset: scope.utcOffset\n\t                    \n\t                }).then(function(time) {\n\t                \tvar normalizeMoment = function(m) {\n\t    \t            \tif (!m) {\n\t    \t            \t\treturn undefined;\n\t    \t            \t}\n\t    \t            \t\n\t    \t            \tif (scope.useUtc) {\n\t    \t            \t\tm = moment(m).utc();\n\t    \t            \t\n\t    \t            \t} else if (scope.utcOffset) {\n\t    \t            \t\tm = moment(m).utcOffset(scope.utcOffset);\n\t    \t            \t}\n\t    \t            \t\n\t    \t            \treturn m;\n\t    \t            };\n\t    \t            \n\t                    ngModel.$setViewValue(normalizeMoment(moment(time)).format(scope.timeFormat));\n\t                    ngModel.$render();\n\t                });\n\t            };\n\t            \n\t            element.on(\"click\", showPicker);\n\t            \n\t            scope.$on(\"$destroy\", function() {\n\t                element.off(\"click\", showPicker);\n\t            });\n        \t}\n        }\n    }\n}]);\n/* global = */\n\nfunction DatePickerCtrl($scope, $mdDialog, $mdMedia, $timeout, currentDate, minDate, maxDate, useUtc, utcOffset) {\n\t$scope.$mdMedia = $mdMedia;\n\t\n\tvar self = this;\n\n    this.selectingYear = false;\n\n    this.init = function() {\n    \t// normalize moments\n    \tthis.currentMoment = this.normalizeMoment(currentDate);\n    \tthis.minMoment = this.normalizeMoment(minDate, true);\n    \tthis.maxMoment = this.normalizeMoment(maxDate, true);\n    \t\n    \t// validate min and max date\n    \tif (this.minMoment && this.maxMoment) {\n    \t\tif (this.maxMoment.isBefore(this.minMoment, \"days\")) {\n    \t\t\tthis.maxMoment = moment(this.minMoment).add(1, 'days');\n    \t\t}\n    \t}\n    \t\n    \tif (this.currentMoment) {\n    \t\t// check min date\n\t    \tif (this.minMoment && this.currentMoment.isBefore(this.minMoment, \"days\")) {\n    \t\t\tthis.currentMoment = moment(this.minMoment);\n\t    \t}\n\t    \t\n\t    \t// check max date\n\t    \tif (this.maxMoment && this.currentMoment.isAfter(this.maxMoment, \"days\")) {\n    \t\t\tthis.currentMoment = moment(this.maxMoment);\n\t    \t}\n    \t}\n    \t\n    \t$scope.year = this.currentMoment.year();\n    \t\n    \tvar startYear = this.minMoment ? this.minMoment.year() : 1900;\n    \tvar endYear = this.maxMoment ? this.maxMoment.year() : null;\n    \t\n    \tthis.yearItems = {\n\t        currentIndex_: 0,\n\t        PAGE_SIZE: 5,\n\t        START: startYear,\n\t        getItemAtIndex: function(index) {\n\t        \tif(this.currentIndex_ < index)\n\t                this.currentIndex_ = index;\n\t        \t\n\t        \treturn this.START + index;\n\t        },\n\t        getLength: function() {\n\t            return this.currentIndex_ + Math.floor(this.PAGE_SIZE / 2);\n\t        }\n\t    };\n    };\n    \n    this.normalizeMoment = function(m, skipNull) {\n    \tif (!m) {\n    \t\tif (skipNull) {\n    \t\t\treturn undefined;\n    \t\t}\n    \t\t\n    \t\tm = (useUtc || utcOffset) ? moment().utc(true) : moment();\n    \t}\n    \t\n    \tm = moment.isMoment(m) ? m : moment(m); \n    \t\n    \tif (useUtc) {\n    \t\tm = moment.utc([m.year(), m.month(), m.date()]);\n    \t\n    \t} else if (utcOffset) {\n    \t\tm = moment.utc([m.year(), m.month(), m.date()]).utcOffset(utcOffset, true);\n    \t}\n    \t\n    \treturn m;\n    };\n    \n\tthis.selectYear = function(year) {\n        self.currentMoment.year(year);\n        $scope.year = year;\n        self.selectingYear = false;\n        self.animate();\n    };\n    \n    this.showYear = function() { \n        self.yearTopIndex = (self.currentMoment.year() - self.yearItems.START) + Math.floor(self.yearItems.PAGE_SIZE / 2);\n        self.yearItems.currentIndex_ = (self.currentMoment.year() - self.yearItems.START) + 1;\n        self.selectingYear = true;\n    };\n    \n    this.showCalendar = function() {\n        self.selectingYear = false;\n    };\n    \n    this.today = function() {\n    \tself.currentMoment = this.normalizeMoment(moment());\n    \tthis.selectYear(self.currentMoment.year());\n    };\n    \n    this.isTodayAvailable = function() {\n    \tvar minValid = true, maxValid = true;\n    \tvar today = this.normalizeMoment(moment());\n    \t\n    \tif (this.minMoment) {\n    \t\tminValid = today.isSameOrAfter(this.minMoment, \"days\");\n    \t}\n    \t\n    \tif (this.maxMoment) {\n    \t\tmaxValid = today.isSameOrBefore(this.maxMoment, \"days\");\n    \t}\n    \t\n    \treturn minValid && maxValid;\n    };\n\n    this.cancel = function() {\n        $mdDialog.cancel();\n    };\n\n    this.confirm = function() {\n    \tvar date = this.currentMoment;\n    \t\n    \tif (this.minMoment && this.currentMoment.isBefore(this.minMoment, \"days\")) {\n    \t\tdate = moment(this.minMoment);\n    \t}\n    \t\n    \tif (this.maxMoment && this.currentMoment.isAfter(this.maxMoment, \"days\")) {\n    \t\tdate = moment(this.maxMoment);\n    \t}  \t\n    \t\n        $mdDialog.hide(date.toDate());\n    };\n    \n    this.animate = function() {\n        self.animating = true;\n        $timeout(angular.noop).then(function() {\n            self.animating = false;\n        })  \n    };\n    \n    // init\n    this.init();\n}\n\nmodule.provider(\"$mdpDatePicker\", function() {\n    var LABEL_OK = \"OK\",\n        LABEL_CANCEL = \"Cancel\",\n        LABEL_TODAY = \"Today\"; \n        \n    this.setOKButtonLabel = function(label) {\n        LABEL_OK = label;\n    };\n    \n    this.setCancelButtonLabel = function(label) {\n        LABEL_CANCEL = label;\n    };\n    \n    this.$get = [\"$mdDialog\", function($mdDialog) {\n        var datePicker = function(targetEvent, currentDate, minDate, maxDate, useUtc, utcOffset) {\n            if (!angular.isDate(currentDate)) currentDate = null;\n            if (!angular.isDate(minDate)) minDate = null;\n            if (!angular.isDate(maxDate)) maxDate = null;\n            if (!useUtc || \"undefined\" === typeof useUtc) useUtc = false;\n    \n            return $mdDialog.show({\n                controller:  ['$scope', '$mdDialog', '$mdMedia', '$timeout', 'currentDate', 'minDate', 'maxDate', 'useUtc', 'utcOffset', DatePickerCtrl],\n                controllerAs: 'datepicker',\n                clickOutsideToClose: true,\n                template: '<md-dialog aria-label=\"\" class=\"mdp-datepicker\" ng-class=\"{ \\'portrait\\': !$mdMedia(\\'gt-xs\\') }\">' +\n                            '<md-dialog-content layout=\"row\" layout-wrap>' +\n                                '<div layout=\"column\" layout-align=\"start center\">' +\n                                    '<md-toolbar layout-align=\"start start\" flex class=\"mdp-datepicker-date-wrapper md-hue-1 md-primary\" layout=\"column\">' +\n                                        '<span class=\"mdp-datepicker-year\" ng-click=\"datepicker.showYear()\" ng-class=\"{ \\'active\\': datepicker.selectingYear }\">{{ datepicker.currentMoment.format(\\'YYYY\\') }}</span>' +\n                                        '<span class=\"mdp-datepicker-date\" ng-click=\"datepicker.showCalendar()\" ng-class=\"{ \\'active\\': !datepicker.selectingYear }\">{{ datepicker.currentMoment.format(\"ddd, MMM DD\") }}</span> ' +\n                                    '</md-toolbar>' + \n                                '</div>' +  \n                                '<div>' + \n                                    '<div class=\"mdp-datepicker-select-year mdp-animation-zoom\" layout=\"column\" ng-if=\"datepicker.selectingYear\">' +\n                                        '<md-virtual-repeat-container md-auto-shrink md-top-index=\"datepicker.yearTopIndex\">' +\n                                            '<div flex md-virtual-repeat=\"item in datepicker.yearItems\" md-on-demand class=\"repeated-year\">' +\n                                                '<span class=\"md-button\" ng-click=\"datepicker.selectYear(item)\" md-ink-ripple ng-class=\"{ \\'md-primary current\\': item == year }\">{{ item }}</span>' +\n                                            '</div>' +\n                                        '</md-virtual-repeat-container>' +\n                                    '</div>' +\n                                    '<mdp-calendar ng-if=\"!datepicker.selectingYear\" class=\"mdp-animation-zoom\" date=\"datepicker.currentMoment\" min-date=\"datepicker.minMoment\" max-date=\"datepicker.maxMoment\"></mdp-calendar>' +\n                                    '<md-dialog-actions layout=\"row\">' +\n                                    \t'<md-button ng-click=\"datepicker.today()\" ng-if=\"datepicker.isTodayAvailable()\" aria-label=\"' + LABEL_TODAY + '\">' + LABEL_TODAY + '</md-button>' +\n                                    \t'<span flex></span>' +\n                                        '<md-button ng-click=\"datepicker.cancel()\" aria-label=\"' + LABEL_CANCEL + '\">' + LABEL_CANCEL + '</md-button>' +\n                                        '<md-button ng-click=\"datepicker.confirm()\" class=\"md-primary\" aria-label=\"' + LABEL_OK + '\">' + LABEL_OK + '</md-button>' +\n                                    '</md-dialog-actions>' +\n                                '</div>' +\n                            '</md-dialog-content>' +\n                        '</md-dialog>',\n                targetEvent: targetEvent,\n                locals: {\n                    currentDate: currentDate,\n                    minDate: minDate, \n                    maxDate: maxDate,\n                    useUtc: useUtc, \n                    utcOffset: utcOffset\n                }\n            });\n        };\n    \n        return datePicker;\n    }];\n});\n\nfunction CalendarCtrl($scope) {\n\tvar _self = this;\n\t\n    this.weekDays = moment.weekdaysMin();\n    this.daysInMonth = [];\n    \n    this.updateDaysInMonth = function() {\n        var days = $scope.date.daysInMonth(),\n        \tfirstDay = moment($scope.date).date(1).day();\n        \n        var viewDays = Math.ceil((days + firstDay) / 7) * 7;\n\n        var arr = [];\n        for(var i = 1; i <= viewDays; i++) {\n        \tvar n = (i - firstDay);\n        \tarr.push(i > firstDay && i <= days + firstDay ? {n: n, valid: this.isValidDay(n)} : false);\n        }\n        \n        this.daysInMonth = arr;\n    };\n    \n    this.isValidDay = function(day) {\n    \tvar minValid = true, maxValid = true;\n    \tvar date = moment($scope.date).date(day);\n    \t\n    \tif ($scope.minDate) {\n    \t\tminValid = date.isSameOrAfter($scope.minDate);\n    \t}\n    \t\n    \tif ($scope.maxDate) {\n    \t\tmaxValid = date.isSameOrBefore($scope.maxDate);\n    \t}\n    \t\n    \treturn minValid && maxValid;\n    };\n   \n    this.selectDate = function(dom) {\n    \t$scope.date.date(dom);\n    };\n\n    this.nextMonth = function() {\n    \t$scope.date.add(1, 'months');\n    \tthis.updateDaysInMonth();\n    };\n\n    this.prevMonth = function() {\n    \t$scope.date.subtract(1, 'months');\n    \tthis.updateDaysInMonth();\n    };\n    \n    // init\n    this.updateDaysInMonth();\n}\n\nmodule.directive(\"mdpCalendar\", [\"$animate\", function($animate) {\n    return {\n        restrict: 'E',\n        scope: {\n            \"date\": \"=\",\n            \"minDate\": \"=\",\n            \"maxDate\": \"=\"\n        },\n        template: '<div class=\"mdp-calendar\">' +\n                    '<div layout=\"row\" layout-align=\"space-between center\">' +\n                        '<md-button aria-label=\"previous month\" class=\"md-icon-button\" ng-click=\"calendar.prevMonth()\"><md-icon md-font-set=\"material-icons\"> chevron_left </md-icon></md-button>' +\n                        '<md-button class=\"mdp-calendar-monthyear\" ng-show=\"!calendar.animating\" ng-click=\"showYear()\">{{ date.format(\"MMMM YYYY\") }}</md-button>' +\n                        '<md-button aria-label=\"next month\" class=\"md-icon-button\" ng-click=\"calendar.nextMonth()\"><md-icon md-font-set=\"material-icons\"> chevron_right </md-icon></md-button>' +\n                    '</div>' +\n                    '<div layout=\"row\" layout-align=\"space-around center\" class=\"mdp-calendar-week-days\" ng-show=\"!calendar.animating\">' +\n                        '<div layout layout-align=\"center center\" ng-repeat=\"d in calendar.weekDays track by $index\">{{ d }}</div>' +\n                    '</div>' +\n                    '<div layout=\"row\" layout-align=\"space-around center\" layout-wrap class=\"mdp-calendar-days\" ng-class=\"{ \\'mdp-animate-next\\': calendar.animating }\" ng-show=\"!calendar.animating\" md-swipe-left=\"calendar.nextMonth()\" md-swipe-right=\"calendar.prevMonth()\">' +\n                        '<div layout layout-align=\"center center\" ng-repeat-start=\"day in calendar.daysInMonth track by $index\" ng-class=\"{ \\'mdp-day-placeholder\\': day === false }\">' +\n                            '<md-button class=\"md-icon-button md-raised\" aria-label=\"Select day\" ng-if=\"day !== false\" ng-class=\"{\\'md-accent\\': date.date() == day.n}\" ng-click=\"calendar.selectDate(day.n)\" ng-disabled=\"!day.valid\">{{ day.n }}</md-button>' +\n                        '</div>' +\n                        '<div flex=\"100\" ng-if=\"($index + 1) % 7 == 0\" ng-repeat-end></div>' +\n                    '</div>' +\n                '</div>',\n        controller: [\"$scope\", CalendarCtrl],\n        controllerAs: \"calendar\",\n        link: function(scope, element, attrs, ctrl) {\n        \tvar datepickerCtrl = scope.$parent.datepicker;\n        \t\n        \tscope.showYear = datepickerCtrl.showYear;\n        \t\n            var animElements = [\n                element[0].querySelector(\".mdp-calendar-week-days\"),\n                element[0].querySelector('.mdp-calendar-days'),\n                element[0].querySelector('.mdp-calendar-monthyear')\n            ];\n            animElements = animElements.map(function(a) {\n               return angular.element(a); \n            });\n                \n            scope.$watch(function() { return  scope.date.format(\"YYYYMM\") }, function(newValue, oldValue) {\n                var direction = null;\n                \n                if(newValue > oldValue)\n                    direction = \"mdp-animate-next\";\n                else if(newValue < oldValue)\n                    direction = \"mdp-animate-prev\";\n                \n                if(direction) {\n                    for(var i in animElements) {\n                        animElements[i].addClass(direction);\n                        $animate.removeClass(animElements[i], direction);\n                    }\n                }\n            });\n        }\n    }\n}]);\n\nmodule.directive(\"mdpDatePicker\", [\"$mdpDatePicker\", \"$timeout\", function($mdpDatePicker, $timeout) {\n    return  {\n        restrict: 'A',\n        require: '?ngModel',\n        scope: {\n        \t\"ngModel\" : \"=\",\n        \t\"minDate\": \"=mdpMinDate\",\n            \"maxDate\": \"=mdpMaxDate\",\n            \"useMobile\" : \"=mdpUseMobile\",\n            \"useUtc\" : \"=mdpUseUtc\",\n            \"utcOffset\" : \"=mdpUtcOffset\"\n        },\n        link: function(scope, element, attrs, ngModel) {\n\t\t\tif (attrs.readonly || attrs.disabled) {\n\t\t\t\treturn;\n\t\t\t}\n        \t\n            if ('undefined' !== typeof attrs.type && 'date' === attrs.type && ngModel) {\n            \tif ('undefined' !== typeof scope.useMobile && scope.useMobile && detect.parse(navigator.userAgent).device.type.toLowerCase() === \"mobile\") {\n            \t\t// use mobile-system default picker\n            \t\t\n            \t} else {\n\t                angular.element(element).on(\"click\", function(ev) {\n\t                \tev.preventDefault();\n\t                \t\n\t                \t$mdpDatePicker(ev, ngModel.$modelValue, scope.minDate, scope.maxDate, scope.useUtc, scope.utcOffset).then(function(selectedDate) {\n\t                \t\t$timeout(function() {\n\t                \t\t\tvar normalizeMoment = function(m) {\n\t                \t\t    \tif (!m) {\n\t                \t\t    \t\treturn undefined;\n\t                \t\t    \t}\n\t                \t\t    \t\n\t                \t\t    \tif (scope.useUtc) {\n\t                \t\t    \t\tm = moment.utc([m.year(), m.month(), m.date()]);\n\t                \t\t    \t\n\t                \t\t    \t} else if (scope.utcOffset) {\n\t                \t\t    \t\tm = moment.utc([m.year(), m.month(), m.date()]).utcOffset(scope.utcOffset, true);\n\t                \t\t    \t}\n\t                \t\t    \t\n\t                \t\t    \treturn m;\n\t                \t\t    };\n\t                \t\t\t\n\t                \t\t\tvar selectedMoment = normalizeMoment(moment(selectedDate));\n\t                \t\t\tvar minMoment = scope.minDate ? normalizeMoment(moment(scope.minDate)) : null;\n\t                \t\t\tvar maxMoment = scope.maxDate ? normalizeMoment(moment(scope.maxDate)) : null;\n\t                \t\t\t\n\t                \t\t\t// validate min and max date\n\t                        \tif (minMoment && maxMoment) {\n\t                        \t\tif (maxMoment.isBefore(minMoment, \"days\")) {\n\t                        \t\t\tmaxMoment = normalizeMoment(moment(minMoment)).add(1, 'days');\n\t                        \t\t}\n\t                        \t}\n\t                \t\t\t\n\t                \t\t\tif (minMoment && minMoment.isValid()) {\n\t                \t\t\t\tngModel.$setValidity('mindate', selectedMoment.isSameOrAfter(minMoment, \"days\"));\n\t                \t\t\t}\n\t                \t\t\t\n\t                \t\t\tif (maxMoment && maxMoment.isValid()) {\n\t                \t\t\t\tngModel.$setValidity('maxdate', selectedMoment.isSameOrBefore(maxMoment, \"days\"));\n\t                \t\t\t}\n\t                \t\t\t\n\t                \t\t\tscope.ngModel = selectedMoment.toDate();\n\t                          });\n\t                      });\n\t                });\n            \t}\n            }\n        }\n    };\n}]);\n})();"],"sourceRoot":"/source/"}