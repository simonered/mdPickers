{"version":3,"sources":["mdPickers.min.js"],"names":["DatePickerCtrl","$scope","$mdDialog","$mdMedia","$timeout","currentDate","minDate","maxDate","self","this","currentMoment","moment","minMoment","startOf","maxMoment","selectingYear","init","isBefore","add","isAfter","startYear","year","yearItems","currentIndex_","PAGE_SIZE","START","getItemAtIndex","index","getLength","Math","floor","selectYear","animate","showYear","yearTopIndex","showCalendar","today","isTodayAvailable","minValid","maxValid","date","toDate","cancel","confirm","hide","animating","angular","noop","then","CalendarCtrl","weekDays","weekdaysMin","daysInMonth","updateDaysInMonth","days","firstDay","day","viewDays","ceil","arr","i","n","push","valid","isValidDay","selectDate","dom","nextMonth","prevMonth","subtract","TimePickerCtrl","VIEW_HOURS","VIEW_MINUTES","currentView","clockHours","parseInt","format","clockMinutes","minutes","$watch","newValue","oldValue","isDefined","hour","setAM","setPM","now","ClockCtrl","TYPE_HOURS","TYPE_MINUTES","STEP_DEG","steps","selected","CLOCK_TYPES","hours","range","getPointerStyle","divider","type","degrees","round","-webkit-transform","-ms-transform","transform","setTimeByDeg","deg","setTime","time","module","provider","LABEL_OK","LABEL_CANCEL","LABEL_TODAY","setOKButtonLabel","label","setCancelButtonLabel","$get","datePicker","targetEvent","isDate","Date","show","controller","controllerAs","clickOutsideToClose","template","locals","directive","$animate","restrict","scope","link","element","attrs","ctrl","animElements","querySelector","map","a","direction","addClass","removeClass","$mdpDatePicker","require","useMobileDefault","ngModel","readonly","disabled","detect","parse","navigator","userAgent","device","toLowerCase","on","ev","preventDefault","$modelValue","selectedDate","selectedMoment","isValid","$setValidity","isSameOrAfter","isSameOrBefore","$setViewValue","$render","replace","container","onEvent","event","target","x","offsetWidth","offsetX","y","offsetY","offsetHeight","atan2","PI","off","$on","LABEL_NOW","timePicker","$mdpTimePicker"],"mappings":"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","file":"mdPickers.min.js","sourcesContent":["(function() {\n\"use strict\";\nvar module = angular.module(\"mdPickers\", [\n\t\"ngMaterial\",\n\t\"ngAnimate\",\n\t\"ngAria\"\n]); \n/* global = */\n\nfunction DatePickerCtrl($scope, $mdDialog, $mdMedia, $timeout, currentDate, minDate, maxDate) {\n    var self = this;\n\n    this.currentDate = currentDate;\n    this.currentMoment = moment(self.currentDate);\n    this.minMoment = minDate ? moment(minDate).startOf(\"day\") : null;\n    this.maxMoment = maxDate ? moment(maxDate).startOf(\"day\") : null;\n    this.selectingYear = false;\n\n    $scope.$mdMedia = $mdMedia;\n    \n    this.init = function() {\n    \t// validate min and max date\n    \tif (this.minMoment && this.maxMoment) {\n    \t\tif (this.maxMoment.isBefore(this.minMoment, \"days\")) {\n    \t\t\tthis.maxMoment = moment(this.minMoment).add(1, 'days');\n    \t\t}\n    \t}\n    \t\n    \tif (this.currentMoment) {\n    \t\t// check min date\n\t    \tif (this.minMoment && this.currentMoment.isBefore(this.minMoment, \"days\")) {\n    \t\t\tthis.currentMoment = moment(this.minMoment);\n\t    \t}\n\t    \t\n\t    \t// check max date\n\t    \tif (this.maxMoment && this.currentMoment.isAfter(this.maxMoment, \"days\")) {\n    \t\t\tthis.currentMoment = moment(this.maxMoment);\n\t    \t}\n    \t}\n    \t\n    \tvar startYear = this.minMoment ? this.minMoment.year() : 1900;\n    \tvar endYear = this.maxMoment ? this.maxMoment.year() : null;\n    \t\n    \tthis.yearItems = {\n\t        currentIndex_: 0,\n\t        PAGE_SIZE: 5,\n\t        START: startYear,\n\t        getItemAtIndex: function(index) {\n\t        \tif(this.currentIndex_ < index)\n\t                this.currentIndex_ = index;\n\t        \t\n\t        \treturn this.START + index;\n\t        },\n\t        getLength: function() {\n\t            return this.currentIndex_ + Math.floor(this.PAGE_SIZE / 2);\n\t        }\n\t    };\n    };\n    \n    self.init();\n    \n    $scope.year = this.currentMoment.year();\n\n\tthis.selectYear = function(year) {\n        self.currentMoment.year(year);\n        $scope.year = year;\n        self.selectingYear = false;\n        self.animate();\n    };\n    \n    this.showYear = function() { \n        self.yearTopIndex = (self.currentMoment.year() - self.yearItems.START) + Math.floor(self.yearItems.PAGE_SIZE / 2);\n        self.yearItems.currentIndex_ = (self.currentMoment.year() - self.yearItems.START) + 1;\n        self.selectingYear = true;\n    };\n    \n    this.showCalendar = function() {\n        self.selectingYear = false;\n    };\n    \n    this.today = function() {\n    \tself.currentMoment = moment();\n    \tthis.selectYear(self.currentMoment.year());\n    };\n    \n    this.isTodayAvailable = function() {\n    \tvar minValid = true, maxValid = true;\n    \tvar date = moment().startOf(\"day\").toDate();\n    \t\n    \tif (this.minMoment) {\n    \t\tminValid = date >= this.minMoment.toDate();\n    \t}\n    \t\n    \tif (this.maxMoment) {\n    \t\tmaxValid = date <= this.maxMoment.toDate();\n    \t}\n    \t\n    \treturn minValid && maxValid;\n    };\n\n    this.cancel = function() {\n        $mdDialog.cancel();\n    };\n\n    this.confirm = function() {\n    \tvar date = this.currentMoment;\n    \t\n    \tif (this.minMoment && this.currentMoment.isBefore(this.minMoment, \"days\")) {\n    \t\tdate = moment(this.minMoment);\n    \t}\n    \t\n    \tif (this.maxMoment && this.currentMoment.isAfter(this.maxMoment, \"days\")) {\n    \t\tdate = moment(this.maxMoment);\n    \t}  \t\n    \t\n        $mdDialog.hide(date.toDate());\n    };\n    \n    this.animate = function() {\n        self.animating = true;\n        $timeout(angular.noop).then(function() {\n            self.animating = false;\n        })  \n    };\n}\n\nmodule.provider(\"$mdpDatePicker\", function() {\n    var LABEL_OK = \"OK\",\n        LABEL_CANCEL = \"Cancel\",\n        LABEL_TODAY = \"Today\"; \n        \n    this.setOKButtonLabel = function(label) {\n        LABEL_OK = label;\n    };\n    \n    this.setCancelButtonLabel = function(label) {\n        LABEL_CANCEL = label;\n    };\n    \n    this.$get = [\"$mdDialog\", function($mdDialog) {\n        var datePicker = function(targetEvent, currentDate, minDate, maxDate) {\n            if (!angular.isDate(currentDate)) currentDate = Date.now();\n            if (!angular.isDate(minDate)) minDate = null;\n            if (!angular.isDate(maxDate)) maxDate = null;\n    \n            return $mdDialog.show({\n                controller:  ['$scope', '$mdDialog', '$mdMedia', '$timeout', 'currentDate', 'minDate', 'maxDate', DatePickerCtrl],\n                controllerAs: 'datepicker',\n                clickOutsideToClose: true,\n                template: '<md-dialog aria-label=\"\" class=\"mdp-datepicker\" ng-class=\"{ \\'portrait\\': !$mdMedia(\\'gt-xs\\') }\">' +\n                            '<md-dialog-content layout=\"row\" layout-wrap>' +\n                                '<div layout=\"column\" layout-align=\"start center\">' +\n                                    '<md-toolbar layout-align=\"start start\" flex class=\"mdp-datepicker-date-wrapper md-hue-1 md-primary\" layout=\"column\">' +\n                                        '<span class=\"mdp-datepicker-year\" ng-click=\"datepicker.showYear()\" ng-class=\"{ \\'active\\': datepicker.selectingYear }\">{{ datepicker.currentMoment.format(\\'YYYY\\') }}</span>' +\n                                        '<span class=\"mdp-datepicker-date\" ng-click=\"datepicker.showCalendar()\" ng-class=\"{ \\'active\\': !datepicker.selectingYear }\">{{ datepicker.currentMoment.format(\"ddd, MMM DD\") }}</span> ' +\n                                    '</md-toolbar>' + \n                                '</div>' +  \n                                '<div>' + \n                                    '<div class=\"mdp-datepicker-select-year mdp-animation-zoom\" layout=\"column\" ng-if=\"datepicker.selectingYear\">' +\n                                        '<md-virtual-repeat-container md-auto-shrink md-top-index=\"datepicker.yearTopIndex\">' +\n                                            '<div flex md-virtual-repeat=\"item in datepicker.yearItems\" md-on-demand class=\"repeated-year\">' +\n                                                '<span class=\"md-button\" ng-click=\"datepicker.selectYear(item)\" md-ink-ripple ng-class=\"{ \\'md-primary current\\': item == year }\">{{ item }}</span>' +\n                                            '</div>' +\n                                        '</md-virtual-repeat-container>' +\n                                    '</div>' +\n                                    '<mdp-calendar ng-if=\"!datepicker.selectingYear\" class=\"mdp-animation-zoom\" date=\"datepicker.currentMoment\" min-date=\"datepicker.minMoment\" max-date=\"datepicker.maxMoment\"></mdp-calendar>' +\n                                    '<md-dialog-actions layout=\"row\">' +\n                                    \t'<md-button ng-click=\"datepicker.today()\" ng-if=\"datepicker.isTodayAvailable()\" aria-label=\"' + LABEL_TODAY + '\">' + LABEL_TODAY + '</md-button>' +\n                                    \t'<span flex></span>' +\n                                        '<md-button ng-click=\"datepicker.cancel()\" aria-label=\"' + LABEL_CANCEL + '\">' + LABEL_CANCEL + '</md-button>' +\n                                        '<md-button ng-click=\"datepicker.confirm()\" class=\"md-primary\" aria-label=\"' + LABEL_OK + '\">' + LABEL_OK + '</md-button>' +\n                                    '</md-dialog-actions>' +\n                                '</div>' +\n                            '</md-dialog-content>' +\n                        '</md-dialog>',\n                targetEvent: targetEvent,\n                locals: {\n                    currentDate: currentDate,\n                    minDate: minDate, \n                    maxDate: maxDate\n                }\n            });\n        };\n    \n        return datePicker;\n    }];\n});\n\nfunction CalendarCtrl($scope) {\n\tvar _self = this;\n\t\n    this.weekDays = moment.weekdaysMin();\n    this.daysInMonth = [];\n    \n    this.updateDaysInMonth = function() {\n        var days = $scope.date.daysInMonth(),\n        \tfirstDay = moment($scope.date).date(1).day();\n        \n        var viewDays = Math.ceil((days + firstDay) / 7) * 7;\n\n        var arr = [];\n        for(var i = 1; i <= viewDays; i++) {\n        \tvar n = (i - firstDay);\n        \tarr.push(i > firstDay && i <= days + firstDay ? {n: n, valid: this.isValidDay(n)} : false);\n        }\n        \n        this.daysInMonth = arr;\n    };\n    \n    this.isValidDay = function(day) {\n    \tvar minValid = true, maxValid = true;\n    \tvar date = moment($scope.date).date(day).startOf(\"day\").toDate();\n    \t\n    \tif ($scope.minDate) {\n    \t\tminValid = date >= $scope.minDate.toDate();\n    \t}\n    \t\n    \tif ($scope.maxDate) {\n    \t\tmaxValid = date <= $scope.maxDate.toDate();\n    \t}\n    \t\n    \treturn minValid && maxValid;\n    };\n   \n    this.selectDate = function(dom) {\n    \t$scope.date.date(dom);\n    };\n\n    this.nextMonth = function() {\n    \t$scope.date.add(1, 'months');\n    \tthis.updateDaysInMonth();\n    };\n\n    this.prevMonth = function() {\n    \t$scope.date.subtract(1, 'months');\n    \tthis.updateDaysInMonth();\n    };\n    \n    // init\n    this.updateDaysInMonth();\n}\n\nmodule.directive(\"mdpCalendar\", [\"$animate\", function($animate) {\n    return {\n        restrict: 'E',\n        scope: {\n            \"date\": \"=\",\n            \"minDate\": \"=\",\n            \"maxDate\": \"=\"\n        },\n        template: '<div class=\"mdp-calendar\">' +\n                    '<div layout=\"row\" layout-align=\"space-between center\">' +\n                        '<md-button aria-label=\"previous month\" class=\"md-icon-button\" ng-click=\"calendar.prevMonth()\"><md-icon md-font-set=\"material-icons\"> chevron_left </md-icon></md-button>' +\n                        '<div class=\"mdp-calendar-monthyear\" ng-show=\"!calendar.animating\">{{ date.format(\"MMMM YYYY\") }}</div>' +\n                        '<md-button aria-label=\"next month\" class=\"md-icon-button\" ng-click=\"calendar.nextMonth()\"><md-icon md-font-set=\"material-icons\"> chevron_right </md-icon></md-button>' +\n                    '</div>' +\n                    '<div layout=\"row\" layout-align=\"space-around center\" class=\"mdp-calendar-week-days\" ng-show=\"!calendar.animating\">' +\n                        '<div layout layout-align=\"center center\" ng-repeat=\"d in calendar.weekDays track by $index\">{{ d }}</div>' +\n                    '</div>' +\n                    '<div layout=\"row\" layout-align=\"space-around center\" layout-wrap class=\"mdp-calendar-days\" ng-class=\"{ \\'mdp-animate-next\\': calendar.animating }\" ng-show=\"!calendar.animating\" md-swipe-left=\"calendar.nextMonth()\" md-swipe-right=\"calendar.prevMonth()\">' +\n                        '<div layout layout-align=\"center center\" ng-repeat-start=\"day in calendar.daysInMonth track by $index\" ng-class=\"{ \\'mdp-day-placeholder\\': day === false }\">' +\n                            '<md-button class=\"md-icon-button md-raised\" aria-label=\"Select day\" ng-if=\"day !== false\" ng-class=\"{\\'md-accent\\': date.date() == day.n}\" ng-click=\"calendar.selectDate(day.n)\" ng-disabled=\"!day.valid\">{{ day.n }}</md-button>' +\n                        '</div>' +\n                        '<div flex=\"100\" ng-if=\"($index + 1) % 7 == 0\" ng-repeat-end></div>' +\n                    '</div>' +\n                '</div>',\n        controller: [\"$scope\", CalendarCtrl],\n        controllerAs: \"calendar\",\n        link: function(scope, element, attrs, ctrl) {\n            var animElements = [\n                element[0].querySelector(\".mdp-calendar-week-days\"),\n                element[0].querySelector('.mdp-calendar-days'),\n                element[0].querySelector('.mdp-calendar-monthyear')\n            ];\n            animElements = animElements.map(function(a) {\n               return angular.element(a); \n            });\n                \n            scope.$watch(function() { return  scope.date.format(\"YYYYMM\") }, function(newValue, oldValue) {\n                var direction = null;\n                \n                if(newValue > oldValue)\n                    direction = \"mdp-animate-next\";\n                else if(newValue < oldValue)\n                    direction = \"mdp-animate-prev\";\n                \n                if(direction) {\n                    for(var i in animElements) {\n                        animElements[i].addClass(direction);\n                        $animate.removeClass(animElements[i], direction);\n                    }\n                }\n            });\n        }\n    }\n}]);\n\nmodule.directive(\"mdpDatePicker\", [\"$mdpDatePicker\", \"$timeout\", function($mdpDatePicker, $timeout) {\n    return  {\n        restrict: 'A',\n        require: '?ngModel',\n        scope: {\n            \"minDate\": \"=mdMinDate\",\n            \"maxDate\": \"=mdMaxDate\",\n            \"useMobileDefault\" : \"=useMobileDefault\"\n        },\n        link: function(scope, element, attrs, ngModel) {\n\t\t\tif (attrs.readonly || attrs.disabled) {\n\t\t\t\treturn;\n\t\t\t}\n        \t\n            if ('undefined' !== typeof attrs.type && 'date' === attrs.type && ngModel) {\n            \tif ('undefined' !== typeof scope.useMobileDefault || detect.parse(navigator.userAgent).device.type.toLowerCase() !== \"mobile\") {\n\t                angular.element(element).on(\"click\", function(ev) {\n\t                \tev.preventDefault();\n\t                \t\n\t                \t$mdpDatePicker(ev, ngModel.$modelValue, scope.minDate, scope.maxDate).then(function(selectedDate) {\n\t                \t\t$timeout(function() {\n\t                \t\t\tvar selectedMoment = moment(selectedDate);\n\t                \t\t\tvar minMoment = scope.minDate ? moment(scope.minDate) : null;\n\t                \t\t\tvar maxMoment = scope.maxDate ? moment(scope.maxDate) : null;\n\t                \t\t\t\n\t                \t\t\t// validate min and max date\n\t                        \tif (minMoment && maxMoment) {\n\t                        \t\tif (maxMoment.isBefore(minMoment, \"days\")) {\n\t                        \t\t\tmaxMoment = moment(minMoment).add(1, 'days');\n\t                        \t\t}\n\t                        \t}\n\t                \t\t\t\n\t                \t\t\tif (minMoment && minMoment.isValid()) {\n\t                \t\t\t\tminMoment.startOf(\"day\");\n\t                \t\t\t\tngModel.$setValidity('mindate', selectedMoment.isSameOrAfter(minMoment, \"days\"));\n\t                \t\t\t}\n\t                \t\t\t\n\t                \t\t\tif (maxMoment && maxMoment.isValid()) {\n\t                \t\t\t\tmaxMoment.startOf(\"day\");\n\t                \t\t\t\tngModel.$setValidity('maxdate', selectedMoment.isSameOrBefore(maxMoment, \"days\"));\n\t                \t\t\t}\n\t                    \t      \n\t                \t\t\tngModel.$setViewValue(selectedMoment.format(\"YYYY-MM-DD\")); \n\t                \t\t\tngModel.$render(); \n\t                          });\n\t                      });\n\t                });\n            \t}\n            }\n        }\n    };\n}]);\nfunction TimePickerCtrl($scope, $mdDialog, currentDate, $mdMedia) {\n\tvar self = this;\n    this.VIEW_HOURS = 1;\n    this.VIEW_MINUTES = 2;\n    this.currentDate = currentDate;\n    this.currentView = this.VIEW_HOURS;\n    this.currentMoment = moment(self.currentDate);\n    \n    this.clockHours = parseInt(this.currentMoment.format(\"h\"));\n    this.clockMinutes = parseInt(this.currentMoment.minutes());\n\t\n    $scope.$watch(function() { return self.clockHours }, function(newValue, oldValue) {\n        if(angular.isDefined(oldValue)) {\n            if(self.currentMoment.format(\"A\") == \"AM\")\n                self.currentMoment.hour(self.clockHours);\n            else\n                self.currentMoment.hour(self.clockHours < 12 ? self.clockHours + 12 : self.clockHours);\n        }\n    });\n    \n     $scope.$watch(function() { return self.clockMinutes }, function(newValue, oldValue) {\n        if(angular.isDefined(oldValue)) {\n            self.currentMoment.minutes(newValue < 60 ? newValue : 0);\n        }\n    });\n    \n\t$scope.$mdMedia = $mdMedia;\n    \n\tthis.setAM = function() {\n        if(self.currentMoment.format(\"A\") == \"PM\")\n            self.currentMoment.hour(self.currentMoment.hour() - 12);\n\t};\n    \n    this.setPM = function() {\n        if(self.currentMoment.format(\"A\") == \"AM\")\n            self.currentMoment.hour(self.currentMoment.hour() + 12);\n\t};\n\t\n\tthis.now = function() {\n\t\tself.currentMoment = moment();\n\t};\n    \n    this.cancel = function() {\n        $mdDialog.cancel();\n    };\n\n    this.confirm = function() {\n        $mdDialog.hide(this.currentMoment.toDate());\n    };\n}\n\nfunction ClockCtrl($scope) {\n    var TYPE_HOURS = \"hours\";\n    var TYPE_MINUTES = \"minutes\";\n    \n    this.STEP_DEG = 360 / 12;\n    var self = this;\n    this.steps = [];\n    this.selected = 0;\n    \n    this.CLOCK_TYPES = {\n        \"hours\": {\n            range: 12,\n        },\n        \"minutes\": {\n            range: 60,\n        }\n    }\n    \n    this.getPointerStyle = function() {\n        var divider = 1;\n        switch(self.type) {\n            case TYPE_HOURS:\n                divider = 12;\n                break;\n            case TYPE_MINUTES:\n                divider = 60;\n                break;\n        }  \n        var degrees = Math.round(self.selected * (360 / divider)) - 180;\n        return { \n            \"-webkit-transform\": \"rotate(\" + degrees + \"deg)\",\n            \"-ms-transform\": \"rotate(\" + degrees + \"deg)\",\n            \"transform\": \"rotate(\" + degrees + \"deg)\"\n        }\n    };\n    \n    this.setTimeByDeg = function(deg) {\n        deg = deg >= 360 ? 0 : deg;\n        var divider = 0;\n        switch(self.type) {\n            case TYPE_HOURS:\n                divider = 12;\n                break;\n            case TYPE_MINUTES:\n                divider = 60;\n                break;\n        }  \n        \n        self.setTime(\n            Math.round(divider / 360 * deg)\n        );\n    };\n    \n    this.setTime = function(time, type) {\n        this.selected = time;\n        if (!type) {\n        \ttype = self.type;\n        }\n        \n        switch(type) {\n        case TYPE_HOURS:\n        \t$scope.date.hours(time);\n            break;\n        case TYPE_MINUTES:\n        \t$scope.date.minutes(time);\n            break;\n        }\n    };\n    \n    this.init = function(type) {\n        self.type = type;\n        switch(type) {\n            case TYPE_HOURS:\n                for(var i = 1; i <= 12; i++)\n                    self.steps.push(i);\n                self.selected = $scope.date.hours() || 0;\n                    \n                break;\n            case TYPE_MINUTES:\n                for(var i = 5; i <= 55; i+=5)\n                    self.steps.push(i);\n                self.steps.push(0);\n                self.selected = $scope.date.minutes() || 0;\n                \n                break;\n        }\n    };\n    \n    $scope.$watch('date', function(newValue, oldValue) {\n    \tself.setTime(newValue.hours(), TYPE_HOURS);\n    \tself.setTime(newValue.minutes(), TYPE_MINUTES);\n    });\n}\n\nmodule.directive(\"mdpClock\", [\"$animate\", \"$timeout\", function($animate, $timeout) {\n    return {\n        restrict: 'E',\n        scope: {\n            'type': '@?',\n            'date' : '='\n        },\n        replace: true,\n        template: '<div class=\"mdp-clock\">' +\n                        '<div class=\"mdp-clock-container\">' +\n                            '<md-toolbar class=\"mdp-clock-center md-primary\"></md-toolbar>' +\n                            '<md-toolbar ng-style=\"clock.getPointerStyle()\" class=\"mdp-pointer md-primary\">' +\n                                '<span class=\"mdp-clock-selected md-button md-raised md-primary\"></span>' +\n                            '</md-toolbar>' +\n                            '<md-button ng-class=\"{ \\'md-primary\\': clock.selected == step }\" class=\"md-icon-button md-raised mdp-clock-deg{{ ::(clock.STEP_DEG * ($index + 1)) }}\" ng-repeat=\"step in clock.steps\" ng-click=\"clock.setTime(step)\">{{ step }}</md-button>' +\n                        '</div>' +\n                    '</div>',\n        controller: [\"$scope\", ClockCtrl],\n        controllerAs: \"clock\",\n        link: function(scope, element, attrs, ctrl) {\n                \n            var container = angular.element(element[0].querySelector(\".mdp-clock-container\")),\n                pointer = angular.element(element[0].querySelector(\".mdp-pointer\"));\n            \n            scope.type = scope.type || \"hours\";\n            $timeout(function() {\n            \tctrl.init(scope.type);\n            });\n            \n            var onEvent = function(event) {\n                if(event.target != container[0]) return;\n                var x = ((event.target.offsetWidth / 2) - event.offsetX),\n                    y = (event.offsetY - (event.target.offsetHeight / 2));\n\n                var deg = Math.round((Math.atan2(x, y) * (180 / Math.PI)));\n                $timeout(function() {\n                    ctrl.setTimeByDeg(deg + 180);\n                });\n            }; \n            \n            container.on(\"mousedown\", function() {\n               container.on(\"mousemove\", onEvent);\n            });\n            \n            container.on(\"mouseup mouseout\", function() {\n               container.off(\"mousemove\", onEvent);\n            });\n            \n            container.on(\"click\", onEvent);\n            scope.$on(\"$destroy\", function() {\n                container.off(\"click\", onEvent);\n                container.off(\"mousemove\", onEvent); \n            });\n        }\n    }\n}]);\n\nmodule.provider(\"$mdpTimePicker\", function() {\n    var LABEL_OK = \"OK\",\n        LABEL_CANCEL = \"Cancel\",\n        LABEL_NOW = \"Now\"; \n        \n    this.setOKButtonLabel = function(label) {\n        LABEL_OK = label;\n    };\n    \n    this.setCancelButtonLabel = function(label) {\n        LABEL_CANCEL = label;\n    };\n    \n    this.$get = [\"$mdDialog\", function($mdDialog) {\n        var timePicker = function(targetEvent, currentDate) {\n            if(!angular.isDate(currentDate)) currentDate = Date.now();\n    \n            return $mdDialog.show({\n                controller:  ['$scope', '$mdDialog', 'currentDate', '$mdMedia', TimePickerCtrl],\n                controllerAs: 'timepicker',\n                clickOutsideToClose: true,\n                template: '<md-dialog aria-label=\"\" class=\"mdp-timepicker\" ng-class=\"{ \\'portrait\\': !$mdMedia(\\'gt-xs\\') }\">' +\n                            '<md-dialog-content layout-gt-xs=\"row\" layout-wrap>' +\n                                '<md-toolbar layout-gt-xs=\"column\" layout-xs=\"row\" layout-align=\"center center\" flex class=\"mdp-timepicker-time md-hue-1 md-primary\">' +\n                                    '<div class=\"mdp-timepicker-selected-time\">' +\n                                        '<span ng-class=\"{ \\'active\\': timepicker.currentView == timepicker.VIEW_HOURS }\" ng-click=\"timepicker.currentView = timepicker.VIEW_HOURS\">{{ timepicker.currentMoment.format(\"h\") }}</span>:' + \n                                        '<span ng-class=\"{ \\'active\\': timepicker.currentView == timepicker.VIEW_MINUTES }\" ng-click=\"timepicker.currentView = timepicker.VIEW_MINUTES\">{{ timepicker.currentMoment.format(\"mm\") }}</span>' +\n                                    '</div>' +\n                                    '<div layout=\"column\" class=\"mdp-timepicker-selected-ampm\">' + \n                                        '<span ng-click=\"timepicker.setAM()\" ng-class=\"{ \\'active\\': timepicker.currentMoment.format(\\'A\\') == \\'AM\\' }\">AM</span>' +\n                                        '<span ng-click=\"timepicker.setPM()\" ng-class=\"{ \\'active\\': timepicker.currentMoment.format(\\'A\\') == \\'PM\\' }\">PM</span>' +\n                                    '</div>' + \n                                '</md-toolbar>' +\n                                '<div>' +\n                                    '<div class=\"mdp-clock-switch-container\" ng-switch=\"timepicker.currentView\" layout layout-align=\"center center\">' +\n\t                                    '<mdp-clock class=\"mdp-animation-zoom\" date=\"timepicker.currentMoment\" type=\"hours\" ng-switch-when=\"1\"></mdp-clock>' +\n\t                                    '<mdp-clock class=\"mdp-animation-zoom\" date=\"timepicker.currentMoment\" type=\"minutes\" ng-switch-when=\"2\"></mdp-clock>' +\n                                    '</div>' +\n                                    \n                                    '<md-dialog-actions layout=\"row\">' +\n\t                                    '<md-button ng-click=\"timepicker.now()\" aria-label=\"' + LABEL_NOW + '\">' + LABEL_NOW + '</md-button>' +\n\t                                \t'<span flex></span>' +\n                                        '<md-button ng-click=\"timepicker.cancel()\" aria-label=\"' + LABEL_CANCEL + '\">' + LABEL_CANCEL + '</md-button>' +\n                                        '<md-button ng-click=\"timepicker.confirm()\" class=\"md-primary\" aria-label=\"' + LABEL_OK + '\">' + LABEL_OK + '</md-button>' +\n                                    '</md-dialog-actions>' +\n                                '</div>' +\n                            '</md-dialog-content>' +\n                        '</md-dialog>',\n                targetEvent: targetEvent,\n                locals: {\n                    currentDate: currentDate\n                }\n            });\n        };\n    \n        return timePicker;\n    }];\n});\n\nmodule.directive(\"mdpTimePicker\", [\"$mdpTimePicker\", \"$timeout\", function($mdpTimePicker, $timeout) {\n    return  {\n        restrict: 'A',\n        require: '?ngModel',\n        scope: {\n        \tformat : \"@mdPattern\",\n        \t\"useMobileDefault\" : \"=useMobileDefault\"\n        },\n        link: function(scope, element, attrs, ngModel) {\n            if ('undefined' !== typeof attrs.type && 'time' === attrs.type && ngModel) {\n            \tif ('undefined' !== typeof scope.useMobileDefault || detect.parse(navigator.userAgent).device.type.toLowerCase() !== \"mobile\") {\n\t                angular.element(element).on(\"click\", function(ev) {\n\t                \tev.preventDefault();\n\t                \t\n\t                \t$mdpTimePicker(ev, ngModel.$modelValue).then(function(selectedDate) {\n\t                \t\t$timeout(function() {\n\t                \t\t\tvar format = \"HH:mm\";\n\t                    \t    if (scope.format) {\n\t                    \t    \tformat = scope.format;\n\t                    \t    }  \n\t                \t\t\t\n\t                \t\t\tngModel.$setViewValue(moment(selectedDate).format(format)); \n\t                \t\t\tngModel.$render(); \n\t                          });\n\t                      });\n\t                });\n            \t}\n            }\n        }\n    };\n}]);\n})();"],"sourceRoot":"/source/"}