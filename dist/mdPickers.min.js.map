{"version":3,"sources":["mdPickers.min.js"],"names":["DatePickerCtrl","$scope","$mdDialog","$mdMedia","$timeout","currentDate","minDate","maxDate","useUtc","utcOffset","self","this","currentMoment","moment","minMoment","startOf","maxMoment","selectingYear","init","normalizeMoment","isBefore","add","isAfter","startYear","year","yearItems","currentIndex_","PAGE_SIZE","START","getItemAtIndex","index","getLength","Math","floor","m","utc","month","date","selectYear","animate","showYear","yearTopIndex","showCalendar","today","isTodayAvailable","minValid","maxValid","isSameOrAfter","isSameOrBefore","cancel","confirm","hide","toDate","animating","angular","noop","then","CalendarCtrl","weekDays","weekdaysMin","daysInMonth","updateDaysInMonth","days","firstDay","day","viewDays","ceil","arr","i","n","push","valid","isValidDay","selectDate","dom","nextMonth","prevMonth","subtract","TimePickerCtrl","VIEW_HOURS","VIEW_MINUTES","currentView","clockHours","parseInt","format","clockMinutes","minutes","$watch","newValue","oldValue","isDefined","hour","setAM","setPM","now","ClockCtrl","TYPE_HOURS","TYPE_MINUTES","STEP_DEG","steps","selected","CLOCK_TYPES","hours","range","getPointerStyle","divider","type","degrees","round","-webkit-transform","-ms-transform","transform","setTimeByDeg","deg","setTime","time","module","provider","LABEL_OK","LABEL_CANCEL","LABEL_TODAY","setOKButtonLabel","label","setCancelButtonLabel","$get","datePicker","targetEvent","isDate","Date","show","controller","controllerAs","clickOutsideToClose","template","locals","directive","$animate","restrict","scope","link","element","attrs","ctrl","animElements","querySelector","map","a","direction","addClass","removeClass","$mdpDatePicker","require","ngModel","useMobile","readonly","disabled","detect","parse","navigator","userAgent","device","toLowerCase","on","ev","preventDefault","$modelValue","selectedDate","selectedMoment","isValid","$setValidity","replace","container","onEvent","event","target","x","offsetWidth","offsetX","y","offsetY","offsetHeight","atan2","PI","off","$on","LABEL_NOW","timePicker","$mdpTimePicker","$setViewValue","$render"],"mappings":"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","file":"mdPickers.min.js","sourcesContent":["(function() {\n\"use strict\";\nvar module = angular.module(\"mdPickers\", [\n\t\"ngMaterial\",\n\t\"ngAnimate\",\n\t\"ngAria\"\n]); \n/* global = */\n\nfunction DatePickerCtrl($scope, $mdDialog, $mdMedia, $timeout, currentDate, minDate, maxDate, useUtc, utcOffset) {\n    var self = this;\n\n    this.currentDate = currentDate;\n    this.currentMoment = moment(self.currentDate);\n    this.minMoment = minDate ? moment(minDate).startOf(\"day\") : null;\n    this.maxMoment = maxDate ? moment(maxDate).startOf(\"day\") : null;\n    this.selectingYear = false;\n\n    $scope.$mdMedia = $mdMedia;\n    \n    this.init = function() {\n    \t// convert moments to utc/utcOffset\n    \tthis.currentMoment = this.normalizeMoment(this.currentMoment);\n    \tthis.minMoment = this.normalizeMoment(this.minMoment);\n    \tthis.maxMoment = this.normalizeMoment(this.maxMoment);\n    \t\n    \t// validate min and max date\n    \tif (this.minMoment && this.maxMoment) {\n    \t\tif (this.maxMoment.isBefore(this.minMoment, \"days\")) {\n    \t\t\tthis.maxMoment = moment(this.minMoment).add(1, 'days');\n    \t\t}\n    \t}\n    \t\n    \tif (this.currentMoment) {\n    \t\t// check min date\n\t    \tif (this.minMoment && this.currentMoment.isBefore(this.minMoment, \"days\")) {\n    \t\t\tthis.currentMoment = moment(this.minMoment);\n\t    \t}\n\t    \t\n\t    \t// check max date\n\t    \tif (this.maxMoment && this.currentMoment.isAfter(this.maxMoment, \"days\")) {\n    \t\t\tthis.currentMoment = moment(this.maxMoment);\n\t    \t}\n    \t}\n    \t\n    \tvar startYear = this.minMoment ? this.minMoment.year() : 1900;\n    \tvar endYear = this.maxMoment ? this.maxMoment.year() : null;\n    \t\n    \tthis.yearItems = {\n\t        currentIndex_: 0,\n\t        PAGE_SIZE: 5,\n\t        START: startYear,\n\t        getItemAtIndex: function(index) {\n\t        \tif(this.currentIndex_ < index)\n\t                this.currentIndex_ = index;\n\t        \t\n\t        \treturn this.START + index;\n\t        },\n\t        getLength: function() {\n\t            return this.currentIndex_ + Math.floor(this.PAGE_SIZE / 2);\n\t        }\n\t    };\n    };\n    \n    this.normalizeMoment = function(m) {\n    \tif (!m) {\n    \t\treturn undefined;\n    \t}\n    \t\n    \tif (useUtc) {\n    \t\tm = moment.utc([m.year(), m.month(), m.date()]);\n    \t\n    \t} else if (utcOffset) {\n    \t\tm = moment.utc([m.year(), m.month(), m.date()]).utcOffset(utcOffset, true);\n    \t}\n    \t\n    \treturn m;\n    };\n    \n    self.init();\n    \n    $scope.year = this.currentMoment.year();\n\n\tthis.selectYear = function(year) {\n        self.currentMoment.year(year);\n        $scope.year = year;\n        self.selectingYear = false;\n        self.animate();\n    };\n    \n    this.showYear = function() { \n        self.yearTopIndex = (self.currentMoment.year() - self.yearItems.START) + Math.floor(self.yearItems.PAGE_SIZE / 2);\n        self.yearItems.currentIndex_ = (self.currentMoment.year() - self.yearItems.START) + 1;\n        self.selectingYear = true;\n    };\n    \n    this.showCalendar = function() {\n        self.selectingYear = false;\n    };\n    \n    this.today = function() {\n    \tself.currentMoment = this.normalizeMoment(moment());\n    \tthis.selectYear(self.currentMoment.year());\n    };\n    \n    this.isTodayAvailable = function() {\n    \tvar minValid = true, maxValid = true;\n    \tvar today = this.normalizeMoment(moment());\n    \t\n    \tif (this.minMoment) {\n    \t\tminValid = today.isSameOrAfter(this.minMoment, \"days\");\n    \t}\n    \t\n    \tif (this.maxMoment) {\n    \t\tmaxValid = today.isSameOrBefore(this.maxMoment, \"days\");\n    \t}\n    \t\n    \treturn minValid && maxValid;\n    };\n\n    this.cancel = function() {\n        $mdDialog.cancel();\n    };\n\n    this.confirm = function() {\n    \tvar date = this.currentMoment;\n    \t\n    \tif (this.minMoment && this.currentMoment.isBefore(this.minMoment, \"days\")) {\n    \t\tdate = moment(this.minMoment);\n    \t}\n    \t\n    \tif (this.maxMoment && this.currentMoment.isAfter(this.maxMoment, \"days\")) {\n    \t\tdate = moment(this.maxMoment);\n    \t}  \t\n    \t\n        $mdDialog.hide(date.toDate());\n    };\n    \n    this.animate = function() {\n        self.animating = true;\n        $timeout(angular.noop).then(function() {\n            self.animating = false;\n        })  \n    };\n}\n\nmodule.provider(\"$mdpDatePicker\", function() {\n    var LABEL_OK = \"OK\",\n        LABEL_CANCEL = \"Cancel\",\n        LABEL_TODAY = \"Today\"; \n        \n    this.setOKButtonLabel = function(label) {\n        LABEL_OK = label;\n    };\n    \n    this.setCancelButtonLabel = function(label) {\n        LABEL_CANCEL = label;\n    };\n    \n    this.$get = [\"$mdDialog\", function($mdDialog) {\n        var datePicker = function(targetEvent, currentDate, minDate, maxDate, useUtc, utcOffset) {\n            if (!angular.isDate(currentDate)) currentDate = Date.now();\n            if (!angular.isDate(minDate)) minDate = null;\n            if (!angular.isDate(maxDate)) maxDate = null;\n            if (!useUtc || \"undefined\" === typeof useUtc) useUtc = false;\n    \n            return $mdDialog.show({\n                controller:  ['$scope', '$mdDialog', '$mdMedia', '$timeout', 'currentDate', 'minDate', 'maxDate', 'useUtc', 'utcOffset', DatePickerCtrl],\n                controllerAs: 'datepicker',\n                clickOutsideToClose: true,\n                template: '<md-dialog aria-label=\"\" class=\"mdp-datepicker\" ng-class=\"{ \\'portrait\\': !$mdMedia(\\'gt-xs\\') }\">' +\n                            '<md-dialog-content layout=\"row\" layout-wrap>' +\n                                '<div layout=\"column\" layout-align=\"start center\">' +\n                                    '<md-toolbar layout-align=\"start start\" flex class=\"mdp-datepicker-date-wrapper md-hue-1 md-primary\" layout=\"column\">' +\n                                        '<span class=\"mdp-datepicker-year\" ng-click=\"datepicker.showYear()\" ng-class=\"{ \\'active\\': datepicker.selectingYear }\">{{ datepicker.currentMoment.format(\\'YYYY\\') }}</span>' +\n                                        '<span class=\"mdp-datepicker-date\" ng-click=\"datepicker.showCalendar()\" ng-class=\"{ \\'active\\': !datepicker.selectingYear }\">{{ datepicker.currentMoment.format(\"ddd, MMM DD\") }}</span> ' +\n                                    '</md-toolbar>' + \n                                '</div>' +  \n                                '<div>' + \n                                    '<div class=\"mdp-datepicker-select-year mdp-animation-zoom\" layout=\"column\" ng-if=\"datepicker.selectingYear\">' +\n                                        '<md-virtual-repeat-container md-auto-shrink md-top-index=\"datepicker.yearTopIndex\">' +\n                                            '<div flex md-virtual-repeat=\"item in datepicker.yearItems\" md-on-demand class=\"repeated-year\">' +\n                                                '<span class=\"md-button\" ng-click=\"datepicker.selectYear(item)\" md-ink-ripple ng-class=\"{ \\'md-primary current\\': item == year }\">{{ item }}</span>' +\n                                            '</div>' +\n                                        '</md-virtual-repeat-container>' +\n                                    '</div>' +\n                                    '<mdp-calendar ng-if=\"!datepicker.selectingYear\" class=\"mdp-animation-zoom\" date=\"datepicker.currentMoment\" min-date=\"datepicker.minMoment\" max-date=\"datepicker.maxMoment\"></mdp-calendar>' +\n                                    '<md-dialog-actions layout=\"row\">' +\n                                    \t'<md-button ng-click=\"datepicker.today()\" ng-if=\"datepicker.isTodayAvailable()\" aria-label=\"' + LABEL_TODAY + '\">' + LABEL_TODAY + '</md-button>' +\n                                    \t'<span flex></span>' +\n                                        '<md-button ng-click=\"datepicker.cancel()\" aria-label=\"' + LABEL_CANCEL + '\">' + LABEL_CANCEL + '</md-button>' +\n                                        '<md-button ng-click=\"datepicker.confirm()\" class=\"md-primary\" aria-label=\"' + LABEL_OK + '\">' + LABEL_OK + '</md-button>' +\n                                    '</md-dialog-actions>' +\n                                '</div>' +\n                            '</md-dialog-content>' +\n                        '</md-dialog>',\n                targetEvent: targetEvent,\n                locals: {\n                    currentDate: currentDate,\n                    minDate: minDate, \n                    maxDate: maxDate,\n                    useUtc: useUtc, \n                    utcOffset: utcOffset\n                }\n            });\n        };\n    \n        return datePicker;\n    }];\n});\n\nfunction CalendarCtrl($scope) {\n\tvar _self = this;\n\t\n    this.weekDays = moment.weekdaysMin();\n    this.daysInMonth = [];\n    \n    this.updateDaysInMonth = function() {\n        var days = $scope.date.daysInMonth(),\n        \tfirstDay = moment($scope.date).date(1).day();\n        \n        var viewDays = Math.ceil((days + firstDay) / 7) * 7;\n\n        var arr = [];\n        for(var i = 1; i <= viewDays; i++) {\n        \tvar n = (i - firstDay);\n        \tarr.push(i > firstDay && i <= days + firstDay ? {n: n, valid: this.isValidDay(n)} : false);\n        }\n        \n        this.daysInMonth = arr;\n    };\n    \n    this.isValidDay = function(day) {\n    \tvar minValid = true, maxValid = true;\n    \tvar date = moment($scope.date).date(day);\n    \t\n    \tif ($scope.minDate) {\n    \t\tminValid = date.isSameOrAfter($scope.minDate);\n    \t}\n    \t\n    \tif ($scope.maxDate) {\n    \t\tmaxValid = date.isSameOrBefore($scope.maxDate);\n    \t}\n    \t\n    \treturn minValid && maxValid;\n    };\n   \n    this.selectDate = function(dom) {\n    \t$scope.date.date(dom);\n    };\n\n    this.nextMonth = function() {\n    \t$scope.date.add(1, 'months');\n    \tthis.updateDaysInMonth();\n    };\n\n    this.prevMonth = function() {\n    \t$scope.date.subtract(1, 'months');\n    \tthis.updateDaysInMonth();\n    };\n    \n    // init\n    this.updateDaysInMonth();\n}\n\nmodule.directive(\"mdpCalendar\", [\"$animate\", function($animate) {\n    return {\n        restrict: 'E',\n        scope: {\n            \"date\": \"=\",\n            \"minDate\": \"=\",\n            \"maxDate\": \"=\"\n        },\n        template: '<div class=\"mdp-calendar\">' +\n                    '<div layout=\"row\" layout-align=\"space-between center\">' +\n                        '<md-button aria-label=\"previous month\" class=\"md-icon-button\" ng-click=\"calendar.prevMonth()\"><md-icon md-font-set=\"material-icons\"> chevron_left </md-icon></md-button>' +\n                        '<div class=\"mdp-calendar-monthyear\" ng-show=\"!calendar.animating\">{{ date.format(\"MMMM YYYY\") }}</div>' +\n                        '<md-button aria-label=\"next month\" class=\"md-icon-button\" ng-click=\"calendar.nextMonth()\"><md-icon md-font-set=\"material-icons\"> chevron_right </md-icon></md-button>' +\n                    '</div>' +\n                    '<div layout=\"row\" layout-align=\"space-around center\" class=\"mdp-calendar-week-days\" ng-show=\"!calendar.animating\">' +\n                        '<div layout layout-align=\"center center\" ng-repeat=\"d in calendar.weekDays track by $index\">{{ d }}</div>' +\n                    '</div>' +\n                    '<div layout=\"row\" layout-align=\"space-around center\" layout-wrap class=\"mdp-calendar-days\" ng-class=\"{ \\'mdp-animate-next\\': calendar.animating }\" ng-show=\"!calendar.animating\" md-swipe-left=\"calendar.nextMonth()\" md-swipe-right=\"calendar.prevMonth()\">' +\n                        '<div layout layout-align=\"center center\" ng-repeat-start=\"day in calendar.daysInMonth track by $index\" ng-class=\"{ \\'mdp-day-placeholder\\': day === false }\">' +\n                            '<md-button class=\"md-icon-button md-raised\" aria-label=\"Select day\" ng-if=\"day !== false\" ng-class=\"{\\'md-accent\\': date.date() == day.n}\" ng-click=\"calendar.selectDate(day.n)\" ng-disabled=\"!day.valid\">{{ day.n }}</md-button>' +\n                        '</div>' +\n                        '<div flex=\"100\" ng-if=\"($index + 1) % 7 == 0\" ng-repeat-end></div>' +\n                    '</div>' +\n                '</div>',\n        controller: [\"$scope\", CalendarCtrl],\n        controllerAs: \"calendar\",\n        link: function(scope, element, attrs, ctrl) {\n            var animElements = [\n                element[0].querySelector(\".mdp-calendar-week-days\"),\n                element[0].querySelector('.mdp-calendar-days'),\n                element[0].querySelector('.mdp-calendar-monthyear')\n            ];\n            animElements = animElements.map(function(a) {\n               return angular.element(a); \n            });\n                \n            scope.$watch(function() { return  scope.date.format(\"YYYYMM\") }, function(newValue, oldValue) {\n                var direction = null;\n                \n                if(newValue > oldValue)\n                    direction = \"mdp-animate-next\";\n                else if(newValue < oldValue)\n                    direction = \"mdp-animate-prev\";\n                \n                if(direction) {\n                    for(var i in animElements) {\n                        animElements[i].addClass(direction);\n                        $animate.removeClass(animElements[i], direction);\n                    }\n                }\n            });\n        }\n    }\n}]);\n\nmodule.directive(\"mdpDatePicker\", [\"$mdpDatePicker\", \"$timeout\", function($mdpDatePicker, $timeout) {\n    return  {\n        restrict: 'A',\n        require: '?ngModel',\n        scope: {\n        \t\"ngModel\" : \"=\",\n        \t\"minDate\": \"=mdpMinDate\",\n            \"maxDate\": \"=mdpMaxDate\",\n            \"useMobile\" : \"=mdpUseMobile\",\n            \"useUtc\" : \"=mdpUseUtc\",\n            \"utcOffset\" : \"=mdpUtcOffset\"\n        },\n        link: function(scope, element, attrs, ngModel) {\n\t\t\tif (attrs.readonly || attrs.disabled) {\n\t\t\t\treturn;\n\t\t\t}\n        \t\n            if ('undefined' !== typeof attrs.type && 'date' === attrs.type && ngModel) {\n            \tif ('undefined' !== typeof scope.useMobile || detect.parse(navigator.userAgent).device.type.toLowerCase() !== \"mobile\") {\n\t                angular.element(element).on(\"click\", function(ev) {\n\t                \tev.preventDefault();\n\t                \t\n\t                \t$mdpDatePicker(ev, ngModel.$modelValue, scope.minDate, scope.maxDate, scope.useUtc, scope.utcOffset).then(function(selectedDate) {\n\t                \t\t$timeout(function() {\n\t                \t\t\tvar selectedMoment = moment(selectedDate);\n\t                \t\t\tvar minMoment = scope.minDate ? moment(scope.minDate) : null;\n\t                \t\t\tvar maxMoment = scope.maxDate ? moment(scope.maxDate) : null;\n\t                \t\t\t\n\t                \t\t\t// validate min and max date\n\t                        \tif (minMoment && maxMoment) {\n\t                        \t\tif (maxMoment.isBefore(minMoment, \"days\")) {\n\t                        \t\t\tmaxMoment = moment(minMoment).add(1, 'days');\n\t                        \t\t}\n\t                        \t}\n\t                \t\t\t\n\t                \t\t\tif (minMoment && minMoment.isValid()) {\n\t                \t\t\t\tngModel.$setValidity('mindate', selectedMoment.isSameOrAfter(minMoment, \"days\"));\n\t                \t\t\t}\n\t                \t\t\t\n\t                \t\t\tif (maxMoment && maxMoment.isValid()) {\n\t                \t\t\t\tngModel.$setValidity('maxdate', selectedMoment.isSameOrBefore(maxMoment, \"days\"));\n\t                \t\t\t}\n\t                \t\t\t\n\t                \t\t\tscope.ngModel = selectedMoment.toDate();\n\t                    \t      \n//\t                \t\t\tngModel.$setViewValue(selectedMoment.format(\"YYYY-MM-DD\"));\n//\t                \t\t\tngModel.$modelValue = selectedMoment.toDate();\n//\t                \t\t\tngModel.$commitViewValue();\t                \t\t\t\n//\t                \t\t\tngModel.$render();\n\t                          });\n\t                      });\n\t                });\n            \t}\n            }\n        }\n    };\n}]);\nfunction TimePickerCtrl($scope, $mdDialog, currentDate, $mdMedia) {\n\tvar self = this;\n    this.VIEW_HOURS = 1;\n    this.VIEW_MINUTES = 2;\n    this.currentDate = currentDate;\n    this.currentView = this.VIEW_HOURS;\n    this.currentMoment = moment(self.currentDate);\n    \n    this.clockHours = parseInt(this.currentMoment.format(\"h\"));\n    this.clockMinutes = parseInt(this.currentMoment.minutes());\n\t\n    $scope.$watch(function() { return self.clockHours }, function(newValue, oldValue) {\n        if(angular.isDefined(oldValue)) {\n            if(self.currentMoment.format(\"A\") == \"AM\")\n                self.currentMoment.hour(self.clockHours);\n            else\n                self.currentMoment.hour(self.clockHours < 12 ? self.clockHours + 12 : self.clockHours);\n        }\n    });\n    \n     $scope.$watch(function() { return self.clockMinutes }, function(newValue, oldValue) {\n        if(angular.isDefined(oldValue)) {\n            self.currentMoment.minutes(newValue < 60 ? newValue : 0);\n        }\n    });\n    \n\t$scope.$mdMedia = $mdMedia;\n    \n\tthis.setAM = function() {\n        if(self.currentMoment.format(\"A\") == \"PM\")\n            self.currentMoment.hour(self.currentMoment.hour() - 12);\n\t};\n    \n    this.setPM = function() {\n        if(self.currentMoment.format(\"A\") == \"AM\")\n            self.currentMoment.hour(self.currentMoment.hour() + 12);\n\t};\n\t\n\tthis.now = function() {\n\t\tself.currentMoment = moment();\n\t};\n    \n    this.cancel = function() {\n        $mdDialog.cancel();\n    };\n\n    this.confirm = function() {\n        $mdDialog.hide(this.currentMoment.toDate());\n    };\n}\n\nfunction ClockCtrl($scope) {\n    var TYPE_HOURS = \"hours\";\n    var TYPE_MINUTES = \"minutes\";\n    \n    this.STEP_DEG = 360 / 12;\n    var self = this;\n    this.steps = [];\n    this.selected = 0;\n    \n    this.CLOCK_TYPES = {\n        \"hours\": {\n            range: 12,\n        },\n        \"minutes\": {\n            range: 60,\n        }\n    }\n    \n    this.getPointerStyle = function() {\n        var divider = 1;\n        switch(self.type) {\n            case TYPE_HOURS:\n                divider = 12;\n                break;\n            case TYPE_MINUTES:\n                divider = 60;\n                break;\n        }  \n        var degrees = Math.round(self.selected * (360 / divider)) - 180;\n        return { \n            \"-webkit-transform\": \"rotate(\" + degrees + \"deg)\",\n            \"-ms-transform\": \"rotate(\" + degrees + \"deg)\",\n            \"transform\": \"rotate(\" + degrees + \"deg)\"\n        }\n    };\n    \n    this.setTimeByDeg = function(deg) {\n        deg = deg >= 360 ? 0 : deg;\n        var divider = 0;\n        switch(self.type) {\n            case TYPE_HOURS:\n                divider = 12;\n                break;\n            case TYPE_MINUTES:\n                divider = 60;\n                break;\n        }  \n        \n        self.setTime(\n            Math.round(divider / 360 * deg)\n        );\n    };\n    \n    this.setTime = function(time, type) {\n        this.selected = time;\n        if (!type) {\n        \ttype = self.type;\n        }\n        \n        switch(type) {\n        case TYPE_HOURS:\n        \t$scope.date.hours(time);\n            break;\n        case TYPE_MINUTES:\n        \t$scope.date.minutes(time);\n            break;\n        }\n    };\n    \n    this.init = function(type) {\n        self.type = type;\n        switch(type) {\n            case TYPE_HOURS:\n                for(var i = 1; i <= 12; i++)\n                    self.steps.push(i);\n                self.selected = $scope.date.hours() || 0;\n                    \n                break;\n            case TYPE_MINUTES:\n                for(var i = 5; i <= 55; i+=5)\n                    self.steps.push(i);\n                self.steps.push(0);\n                self.selected = $scope.date.minutes() || 0;\n                \n                break;\n        }\n    };\n    \n    $scope.$watch('date', function(newValue, oldValue) {\n    \tself.setTime(newValue.hours(), TYPE_HOURS);\n    \tself.setTime(newValue.minutes(), TYPE_MINUTES);\n    });\n}\n\nmodule.directive(\"mdpClock\", [\"$animate\", \"$timeout\", function($animate, $timeout) {\n    return {\n        restrict: 'E',\n        scope: {\n            'type': '@?',\n            'date' : '='\n        },\n        replace: true,\n        template: '<div class=\"mdp-clock\">' +\n                        '<div class=\"mdp-clock-container\">' +\n                            '<md-toolbar class=\"mdp-clock-center md-primary\"></md-toolbar>' +\n                            '<md-toolbar ng-style=\"clock.getPointerStyle()\" class=\"mdp-pointer md-primary\">' +\n                                '<span class=\"mdp-clock-selected md-button md-raised md-primary\"></span>' +\n                            '</md-toolbar>' +\n                            '<md-button ng-class=\"{ \\'md-primary\\': clock.selected == step }\" class=\"md-icon-button md-raised mdp-clock-deg{{ ::(clock.STEP_DEG * ($index + 1)) }}\" ng-repeat=\"step in clock.steps\" ng-click=\"clock.setTime(step)\">{{ step }}</md-button>' +\n                        '</div>' +\n                    '</div>',\n        controller: [\"$scope\", ClockCtrl],\n        controllerAs: \"clock\",\n        link: function(scope, element, attrs, ctrl) {\n                \n            var container = angular.element(element[0].querySelector(\".mdp-clock-container\")),\n                pointer = angular.element(element[0].querySelector(\".mdp-pointer\"));\n            \n            scope.type = scope.type || \"hours\";\n            $timeout(function() {\n            \tctrl.init(scope.type);\n            });\n            \n            var onEvent = function(event) {\n                if(event.target != container[0]) return;\n                var x = ((event.target.offsetWidth / 2) - event.offsetX),\n                    y = (event.offsetY - (event.target.offsetHeight / 2));\n\n                var deg = Math.round((Math.atan2(x, y) * (180 / Math.PI)));\n                $timeout(function() {\n                    ctrl.setTimeByDeg(deg + 180);\n                });\n            }; \n            \n            container.on(\"mousedown\", function() {\n               container.on(\"mousemove\", onEvent);\n            });\n            \n            container.on(\"mouseup mouseout\", function() {\n               container.off(\"mousemove\", onEvent);\n            });\n            \n            container.on(\"click\", onEvent);\n            scope.$on(\"$destroy\", function() {\n                container.off(\"click\", onEvent);\n                container.off(\"mousemove\", onEvent); \n            });\n        }\n    }\n}]);\n\nmodule.provider(\"$mdpTimePicker\", function() {\n    var LABEL_OK = \"OK\",\n        LABEL_CANCEL = \"Cancel\",\n        LABEL_NOW = \"Now\"; \n        \n    this.setOKButtonLabel = function(label) {\n        LABEL_OK = label;\n    };\n    \n    this.setCancelButtonLabel = function(label) {\n        LABEL_CANCEL = label;\n    };\n    \n    this.$get = [\"$mdDialog\", function($mdDialog) {\n        var timePicker = function(targetEvent, currentDate) {\n            if(!angular.isDate(currentDate)) currentDate = Date.now();\n    \n            return $mdDialog.show({\n                controller:  ['$scope', '$mdDialog', 'currentDate', '$mdMedia', TimePickerCtrl],\n                controllerAs: 'timepicker',\n                clickOutsideToClose: true,\n                template: '<md-dialog aria-label=\"\" class=\"mdp-timepicker\" ng-class=\"{ \\'portrait\\': !$mdMedia(\\'gt-xs\\') }\">' +\n                            '<md-dialog-content layout-gt-xs=\"row\" layout-wrap>' +\n                                '<md-toolbar layout-gt-xs=\"column\" layout-xs=\"row\" layout-align=\"center center\" flex class=\"mdp-timepicker-time md-hue-1 md-primary\">' +\n                                    '<div class=\"mdp-timepicker-selected-time\">' +\n                                        '<span ng-class=\"{ \\'active\\': timepicker.currentView == timepicker.VIEW_HOURS }\" ng-click=\"timepicker.currentView = timepicker.VIEW_HOURS\">{{ timepicker.currentMoment.format(\"h\") }}</span>:' + \n                                        '<span ng-class=\"{ \\'active\\': timepicker.currentView == timepicker.VIEW_MINUTES }\" ng-click=\"timepicker.currentView = timepicker.VIEW_MINUTES\">{{ timepicker.currentMoment.format(\"mm\") }}</span>' +\n                                    '</div>' +\n                                    '<div layout=\"column\" class=\"mdp-timepicker-selected-ampm\">' + \n                                        '<span ng-click=\"timepicker.setAM()\" ng-class=\"{ \\'active\\': timepicker.currentMoment.format(\\'A\\') == \\'AM\\' }\">AM</span>' +\n                                        '<span ng-click=\"timepicker.setPM()\" ng-class=\"{ \\'active\\': timepicker.currentMoment.format(\\'A\\') == \\'PM\\' }\">PM</span>' +\n                                    '</div>' + \n                                '</md-toolbar>' +\n                                '<div>' +\n                                    '<div class=\"mdp-clock-switch-container\" ng-switch=\"timepicker.currentView\" layout layout-align=\"center center\">' +\n\t                                    '<mdp-clock class=\"mdp-animation-zoom\" date=\"timepicker.currentMoment\" type=\"hours\" ng-switch-when=\"1\"></mdp-clock>' +\n\t                                    '<mdp-clock class=\"mdp-animation-zoom\" date=\"timepicker.currentMoment\" type=\"minutes\" ng-switch-when=\"2\"></mdp-clock>' +\n                                    '</div>' +\n                                    \n                                    '<md-dialog-actions layout=\"row\">' +\n\t                                    '<md-button ng-click=\"timepicker.now()\" aria-label=\"' + LABEL_NOW + '\">' + LABEL_NOW + '</md-button>' +\n\t                                \t'<span flex></span>' +\n                                        '<md-button ng-click=\"timepicker.cancel()\" aria-label=\"' + LABEL_CANCEL + '\">' + LABEL_CANCEL + '</md-button>' +\n                                        '<md-button ng-click=\"timepicker.confirm()\" class=\"md-primary\" aria-label=\"' + LABEL_OK + '\">' + LABEL_OK + '</md-button>' +\n                                    '</md-dialog-actions>' +\n                                '</div>' +\n                            '</md-dialog-content>' +\n                        '</md-dialog>',\n                targetEvent: targetEvent,\n                locals: {\n                    currentDate: currentDate\n                }\n            });\n        };\n    \n        return timePicker;\n    }];\n});\n\nmodule.directive(\"mdpTimePicker\", [\"$mdpTimePicker\", \"$timeout\", function($mdpTimePicker, $timeout) {\n    return  {\n        restrict: 'A',\n        require: '?ngModel',\n        scope: {\n        \tformat : \"@mdPattern\",\n        \t\"useMobile\" : \"=useMobile\"\n        },\n        link: function(scope, element, attrs, ngModel) {\n            if ('undefined' !== typeof attrs.type && 'time' === attrs.type && ngModel) {\n            \tif ('undefined' !== typeof scope.useMobile || detect.parse(navigator.userAgent).device.type.toLowerCase() !== \"mobile\") {\n\t                angular.element(element).on(\"click\", function(ev) {\n\t                \tev.preventDefault();\n\t                \t\n\t                \t$mdpTimePicker(ev, ngModel.$modelValue).then(function(selectedDate) {\n\t                \t\t$timeout(function() {\n\t                \t\t\tvar format = \"HH:mm\";\n\t                    \t    if (scope.format) {\n\t                    \t    \tformat = scope.format;\n\t                    \t    }  \n\t                \t\t\t\n\t                \t\t\tngModel.$setViewValue(moment(selectedDate).format(format)); \n\t                \t\t\tngModel.$render(); \n\t                          });\n\t                      });\n\t                });\n            \t}\n            }\n        }\n    };\n}]);\n})();"],"sourceRoot":"/source/"}