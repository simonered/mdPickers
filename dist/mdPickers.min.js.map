{"version":3,"sources":["mdPickers.min.js"],"names":["DatePickerCtrl","$scope","$mdDialog","$mdMedia","$timeout","currentDate","minDate","maxDate","useUtc","utcOffset","self","this","selectingYear","init","currentMoment","normalizeMoment","minMoment","maxMoment","isBefore","moment","add","isAfter","year","startYear","yearItems","currentIndex_","PAGE_SIZE","START","getItemAtIndex","index","getLength","Math","floor","m","skipNull","utc","isMoment","month","date","selectYear","animate","showYear","yearTopIndex","showCalendar","today","isTodayAvailable","minValid","maxValid","isSameOrAfter","isSameOrBefore","cancel","confirm","hide","toDate","animating","angular","noop","then","CalendarCtrl","weekDays","weekdaysMin","daysInMonth","updateDaysInMonth","days","firstDay","day","viewDays","ceil","arr","i","n","push","valid","isValidDay","selectDate","dom","nextMonth","prevMonth","subtract","TimePickerCtrl","time","autoSwitch","VIEW_HOURS","VIEW_MINUTES","currentView","clockHours","parseInt","format","clockMinutes","minutes","switchView","setAM","hours","hour","setPM","now","ClockCtrl","TYPE_HOURS","TYPE_MINUTES","STEP_DEG","steps","CLOCK_TYPES","range","getPointerStyle","divider","type","degrees","round","selected","-webkit-transform","-ms-transform","transform","setTimeByDeg","deg","setTime","module","provider","LABEL_OK","LABEL_CANCEL","LABEL_TODAY","setOKButtonLabel","label","setCancelButtonLabel","$get","datePicker","targetEvent","isDate","show","controller","controllerAs","clickOutsideToClose","skipHide","template","locals","directive","$animate","restrict","scope","link","element","attrs","ctrl","datepickerCtrl","$parent","datepicker","animElements","querySelector","map","a","$watch","newValue","oldValue","direction","addClass","removeClass","$mdpDatePicker","require","ngModel","useMobile","readonly","disabled","detect","parse","navigator","userAgent","device","toLowerCase","on","ev","preventDefault","$modelValue","selectedDate","selectedMoment","isValid","$setValidity","bindToController","replace","timepickerCtrl","timepicker","onEvent","event","containerCoords","currentTarget","getClientRects","x","offsetWidth","pageX","left","y","pageY","top","offsetHeight","atan2","PI","indexOf","e","off","$on","LABEL_NOW","setNowButtonLabel","timePicker","options","isObject","$mdpTimePicker","transclude","noFloat","isDefined","mdpNoFloat","placeholder","mdpPlaceholder","openOnClick","mdpOpenOnClick","mdpDisabled","timeFormat","$transclude","updateInputElement","value","inputElement","inputContainerCtrl","setHasValue","$isEmpty","updateTime","strValue","$setViewValue","$pristine","messages","hasClass","inputContainer","$render","onInputElementEvents","target","$viewVaue","clone","append","$error","setInvalid","Object","keys","length","$formatters","unshift","$validators","modelValue","viewValue","required","isUndefined","$parsers","parsed","originalModel","seconds","showPicker"],"mappings":"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","file":"mdPickers.min.js","sourcesContent":["(function() {\n\"use strict\";\nvar module = angular.module(\"mdPickers\", [\n\t\"ngMaterial\",\n\t\"ngAnimate\",\n\t\"ngAria\"\n]); \n/* global = */\n\nfunction DatePickerCtrl($scope, $mdDialog, $mdMedia, $timeout, currentDate, minDate, maxDate, useUtc, utcOffset) {\n\t$scope.$mdMedia = $mdMedia;\n\t\n\tvar self = this;\n\n    this.selectingYear = false;\n\n    this.init = function() {\n    \t// normalize moments\n    \tthis.currentMoment = this.normalizeMoment(currentDate);\n    \tthis.minMoment = this.normalizeMoment(minDate, true);\n    \tthis.maxMoment = this.normalizeMoment(maxDate, true);\n    \t\n    \t// validate min and max date\n    \tif (this.minMoment && this.maxMoment) {\n    \t\tif (this.maxMoment.isBefore(this.minMoment, \"days\")) {\n    \t\t\tthis.maxMoment = moment(this.minMoment).add(1, 'days');\n    \t\t}\n    \t}\n    \t\n    \tif (this.currentMoment) {\n    \t\t// check min date\n\t    \tif (this.minMoment && this.currentMoment.isBefore(this.minMoment, \"days\")) {\n    \t\t\tthis.currentMoment = moment(this.minMoment);\n\t    \t}\n\t    \t\n\t    \t// check max date\n\t    \tif (this.maxMoment && this.currentMoment.isAfter(this.maxMoment, \"days\")) {\n    \t\t\tthis.currentMoment = moment(this.maxMoment);\n\t    \t}\n    \t}\n    \t\n    \t$scope.year = this.currentMoment.year();\n    \t\n    \tvar startYear = this.minMoment ? this.minMoment.year() : 1900;\n    \tvar endYear = this.maxMoment ? this.maxMoment.year() : null;\n    \t\n    \tthis.yearItems = {\n\t        currentIndex_: 0,\n\t        PAGE_SIZE: 5,\n\t        START: startYear,\n\t        getItemAtIndex: function(index) {\n\t        \tif(this.currentIndex_ < index)\n\t                this.currentIndex_ = index;\n\t        \t\n\t        \treturn this.START + index;\n\t        },\n\t        getLength: function() {\n\t            return this.currentIndex_ + Math.floor(this.PAGE_SIZE / 2);\n\t        }\n\t    };\n    };\n    \n    this.normalizeMoment = function(m, skipNull) {\n    \tif (!m) {\n    \t\tif (skipNull) {\n    \t\t\treturn undefined;\n    \t\t}\n    \t\t\n    \t\tm = (useUtc || utcOffset) ? moment().utc(true) : moment();\n    \t}\n    \t\n    \tm = moment.isMoment(m) ? m : moment(m); \n    \t\n    \tif (useUtc) {\n    \t\tm = moment.utc([m.year(), m.month(), m.date()]);\n    \t\n    \t} else if (utcOffset) {\n    \t\tm = moment.utc([m.year(), m.month(), m.date()]).utcOffset(utcOffset, true);\n    \t}\n    \t\n    \treturn m;\n    };\n    \n\tthis.selectYear = function(year) {\n        self.currentMoment.year(year);\n        $scope.year = year;\n        self.selectingYear = false;\n        self.animate();\n    };\n    \n    this.showYear = function() { \n        self.yearTopIndex = (self.currentMoment.year() - self.yearItems.START) + Math.floor(self.yearItems.PAGE_SIZE / 2);\n        self.yearItems.currentIndex_ = (self.currentMoment.year() - self.yearItems.START) + 1;\n        self.selectingYear = true;\n    };\n    \n    this.showCalendar = function() {\n        self.selectingYear = false;\n    };\n    \n    this.today = function() {\n    \tself.currentMoment = this.normalizeMoment(moment());\n    \tthis.selectYear(self.currentMoment.year());\n    };\n    \n    this.isTodayAvailable = function() {\n    \tvar minValid = true, maxValid = true;\n    \tvar today = this.normalizeMoment(moment());\n    \t\n    \tif (this.minMoment) {\n    \t\tminValid = today.isSameOrAfter(this.minMoment, \"days\");\n    \t}\n    \t\n    \tif (this.maxMoment) {\n    \t\tmaxValid = today.isSameOrBefore(this.maxMoment, \"days\");\n    \t}\n    \t\n    \treturn minValid && maxValid;\n    };\n\n    this.cancel = function() {\n        $mdDialog.cancel();\n    };\n\n    this.confirm = function() {\n    \tvar date = this.currentMoment;\n    \t\n    \tif (this.minMoment && this.currentMoment.isBefore(this.minMoment, \"days\")) {\n    \t\tdate = moment(this.minMoment);\n    \t}\n    \t\n    \tif (this.maxMoment && this.currentMoment.isAfter(this.maxMoment, \"days\")) {\n    \t\tdate = moment(this.maxMoment);\n    \t}  \t\n    \t\n        $mdDialog.hide(date.toDate());\n    };\n    \n    this.animate = function() {\n        self.animating = true;\n        $timeout(angular.noop).then(function() {\n            self.animating = false;\n        })  \n    };\n    \n    // init\n    this.init();\n}\n\nmodule.provider(\"$mdpDatePicker\", function() {\n    var LABEL_OK = \"OK\",\n        LABEL_CANCEL = \"Cancel\",\n        LABEL_TODAY = \"Today\"; \n        \n    this.setOKButtonLabel = function(label) {\n        LABEL_OK = label;\n    };\n    \n    this.setCancelButtonLabel = function(label) {\n        LABEL_CANCEL = label;\n    };\n    \n    this.$get = [\"$mdDialog\", function($mdDialog) {\n        var datePicker = function(targetEvent, currentDate, minDate, maxDate, useUtc, utcOffset) {\n            if (!angular.isDate(currentDate)) currentDate = null;\n            if (!angular.isDate(minDate)) minDate = null;\n            if (!angular.isDate(maxDate)) maxDate = null;\n            if (!useUtc || \"undefined\" === typeof useUtc) useUtc = false;\n    \n            return $mdDialog.show({\n                controller:  ['$scope', '$mdDialog', '$mdMedia', '$timeout', 'currentDate', 'minDate', 'maxDate', 'useUtc', 'utcOffset', DatePickerCtrl],\n                controllerAs: 'datepicker',\n                clickOutsideToClose: true,\n                skipHide: true,\n                template: '<md-dialog aria-label=\"\" class=\"mdp-datepicker\" ng-class=\"{ \\'portrait\\': !$mdMedia(\\'gt-xs\\') }\">' +\n                            '<md-dialog-content layout=\"row\" layout-wrap>' +\n                                '<div layout=\"column\" layout-align=\"start center\">' +\n                                    '<md-toolbar layout-align=\"start start\" flex class=\"mdp-datepicker-date-wrapper md-hue-1 md-primary\" layout=\"column\">' +\n                                        '<span class=\"mdp-datepicker-year\" ng-click=\"datepicker.showYear()\" ng-class=\"{ \\'active\\': datepicker.selectingYear }\">{{ datepicker.currentMoment.format(\\'YYYY\\') }}</span>' +\n                                        '<span class=\"mdp-datepicker-date\" ng-click=\"datepicker.showCalendar()\" ng-class=\"{ \\'active\\': !datepicker.selectingYear }\">{{ datepicker.currentMoment.format(\"ddd, MMM DD\") }}</span> ' +\n                                    '</md-toolbar>' + \n                                '</div>' +  \n                                '<div>' + \n                                    '<div class=\"mdp-datepicker-select-year mdp-animation-zoom\" layout=\"column\" ng-if=\"datepicker.selectingYear\">' +\n                                        '<md-virtual-repeat-container md-auto-shrink md-top-index=\"datepicker.yearTopIndex\">' +\n                                            '<div flex md-virtual-repeat=\"item in datepicker.yearItems\" md-on-demand class=\"repeated-year\">' +\n                                                '<span class=\"md-button\" ng-click=\"datepicker.selectYear(item)\" md-ink-ripple ng-class=\"{ \\'md-primary current\\': item == year }\">{{ item }}</span>' +\n                                            '</div>' +\n                                        '</md-virtual-repeat-container>' +\n                                    '</div>' +\n                                    '<mdp-calendar ng-if=\"!datepicker.selectingYear\" class=\"mdp-animation-zoom\" date=\"datepicker.currentMoment\" min-date=\"datepicker.minMoment\" max-date=\"datepicker.maxMoment\"></mdp-calendar>' +\n                                    '<md-dialog-actions layout=\"row\">' +\n                                    \t'<md-button ng-click=\"datepicker.today()\" ng-if=\"datepicker.isTodayAvailable()\" aria-label=\"' + LABEL_TODAY + '\">' + LABEL_TODAY + '</md-button>' +\n                                    \t'<span flex></span>' +\n                                        '<md-button ng-click=\"datepicker.cancel()\" aria-label=\"' + LABEL_CANCEL + '\">' + LABEL_CANCEL + '</md-button>' +\n                                        '<md-button ng-click=\"datepicker.confirm()\" class=\"md-primary\" aria-label=\"' + LABEL_OK + '\">' + LABEL_OK + '</md-button>' +\n                                    '</md-dialog-actions>' +\n                                '</div>' +\n                            '</md-dialog-content>' +\n                        '</md-dialog>',\n                targetEvent: targetEvent,\n                locals: {\n                    currentDate: currentDate,\n                    minDate: minDate, \n                    maxDate: maxDate,\n                    useUtc: useUtc, \n                    utcOffset: utcOffset\n                }\n            });\n        };\n    \n        return datePicker;\n    }];\n});\n\nfunction CalendarCtrl($scope) {\n\tvar _self = this;\n\t\n    this.weekDays = moment.weekdaysMin();\n    this.daysInMonth = [];\n    \n    this.updateDaysInMonth = function() {\n        var days = $scope.date.daysInMonth(),\n        \tfirstDay = moment($scope.date).date(1).day();\n        \n        var viewDays = Math.ceil((days + firstDay) / 7) * 7;\n\n        var arr = [];\n        for(var i = 1; i <= viewDays; i++) {\n        \tvar n = (i - firstDay);\n        \tarr.push(i > firstDay && i <= days + firstDay ? {n: n, valid: this.isValidDay(n)} : false);\n        }\n        \n        this.daysInMonth = arr;\n    };\n    \n    this.isValidDay = function(day) {\n    \tvar minValid = true, maxValid = true;\n    \tvar date = moment($scope.date).date(day);\n    \t\n    \tif ($scope.minDate) {\n    \t\tminValid = date.isSameOrAfter($scope.minDate);\n    \t}\n    \t\n    \tif ($scope.maxDate) {\n    \t\tmaxValid = date.isSameOrBefore($scope.maxDate);\n    \t}\n    \t\n    \treturn minValid && maxValid;\n    };\n   \n    this.selectDate = function(dom) {\n    \t$scope.date.date(dom);\n    };\n\n    this.nextMonth = function() {\n    \t$scope.date.add(1, 'months');\n    \tthis.updateDaysInMonth();\n    };\n\n    this.prevMonth = function() {\n    \t$scope.date.subtract(1, 'months');\n    \tthis.updateDaysInMonth();\n    };\n    \n    // init\n    this.updateDaysInMonth();\n}\n\nmodule.directive(\"mdpCalendar\", [\"$animate\", function($animate) {\n    return {\n        restrict: 'E',\n        scope: {\n            \"date\": \"=\",\n            \"minDate\": \"=\",\n            \"maxDate\": \"=\"\n        },\n        template: '<div class=\"mdp-calendar\">' +\n                    '<div layout=\"row\" layout-align=\"space-between center\">' +\n                        '<md-button aria-label=\"previous month\" class=\"md-icon-button\" ng-click=\"calendar.prevMonth()\"><md-icon md-font-set=\"material-icons\"> chevron_left </md-icon></md-button>' +\n                        '<md-button class=\"mdp-calendar-monthyear\" ng-show=\"!calendar.animating\" ng-click=\"showYear()\">{{ date.format(\"MMMM YYYY\") }}</md-button>' +\n                        '<md-button aria-label=\"next month\" class=\"md-icon-button\" ng-click=\"calendar.nextMonth()\"><md-icon md-font-set=\"material-icons\"> chevron_right </md-icon></md-button>' +\n                    '</div>' +\n                    '<div layout=\"row\" layout-align=\"space-around center\" class=\"mdp-calendar-week-days\" ng-show=\"!calendar.animating\">' +\n                        '<div layout layout-align=\"center center\" ng-repeat=\"d in calendar.weekDays track by $index\">{{ d }}</div>' +\n                    '</div>' +\n                    '<div layout=\"row\" layout-align=\"space-around center\" layout-wrap class=\"mdp-calendar-days\" ng-class=\"{ \\'mdp-animate-next\\': calendar.animating }\" ng-show=\"!calendar.animating\" md-swipe-left=\"calendar.nextMonth()\" md-swipe-right=\"calendar.prevMonth()\">' +\n                        '<div layout layout-align=\"center center\" ng-repeat-start=\"day in calendar.daysInMonth track by $index\" ng-class=\"{ \\'mdp-day-placeholder\\': day === false }\">' +\n                            '<md-button class=\"md-icon-button md-raised\" aria-label=\"Select day\" ng-if=\"day !== false\" ng-class=\"{\\'md-accent\\': date.date() == day.n}\" ng-click=\"calendar.selectDate(day.n)\" ng-disabled=\"!day.valid\">{{ day.n }}</md-button>' +\n                        '</div>' +\n                        '<div flex=\"100\" ng-if=\"($index + 1) % 7 == 0\" ng-repeat-end></div>' +\n                    '</div>' +\n                '</div>',\n        controller: [\"$scope\", CalendarCtrl],\n        controllerAs: \"calendar\",\n        link: function(scope, element, attrs, ctrl) {\n        \tvar datepickerCtrl = scope.$parent.datepicker;\n        \t\n        \tscope.showYear = datepickerCtrl.showYear;\n        \t\n            var animElements = [\n                element[0].querySelector(\".mdp-calendar-week-days\"),\n                element[0].querySelector('.mdp-calendar-days'),\n                element[0].querySelector('.mdp-calendar-monthyear')\n            ];\n            animElements = animElements.map(function(a) {\n               return angular.element(a); \n            });\n                \n            scope.$watch(function() { return  scope.date.format(\"YYYYMM\") }, function(newValue, oldValue) {\n                var direction = null;\n                \n                if(newValue > oldValue)\n                    direction = \"mdp-animate-next\";\n                else if(newValue < oldValue)\n                    direction = \"mdp-animate-prev\";\n                \n                if(direction) {\n                    for(var i in animElements) {\n                        animElements[i].addClass(direction);\n                        $animate.removeClass(animElements[i], direction);\n                    }\n                }\n            });\n        }\n    }\n}]);\n\nmodule.directive(\"mdpDatePicker\", [\"$mdpDatePicker\", \"$timeout\", function($mdpDatePicker, $timeout) {\n    return  {\n        restrict: 'A',\n        require: '?ngModel',\n        scope: {\n        \t\"ngModel\" : \"=\",\n        \t\"minDate\": \"=mdpMinDate\",\n            \"maxDate\": \"=mdpMaxDate\",\n            \"useMobile\" : \"=?mdpUseMobile\",\n            \"useUtc\" : \"=?mdpUseUtc\",\n            \"utcOffset\" : \"@mdpUtcOffset\"\n        },\n        link: function(scope, element, attrs, ngModel) {\n\t\t\tif (attrs.readonly || attrs.disabled) {\n\t\t\t\treturn;\n\t\t\t}\n        \t\n            if ('undefined' !== typeof attrs.type && 'date' === attrs.type && ngModel) {\n            \tif ('undefined' !== typeof scope.useMobile && scope.useMobile && detect.parse(navigator.userAgent).device.type.toLowerCase() === \"mobile\") {\n            \t\t// use mobile-system default picker\n            \t\t\n            \t} else {\n\t                angular.element(element).on(\"click\", function(ev) {\n\t                \tev.preventDefault();\n\t                \t\n\t                \t$mdpDatePicker(ev, ngModel.$modelValue, scope.minDate, scope.maxDate, scope.useUtc, scope.utcOffset).then(function(selectedDate) {\n\t                \t\t$timeout(function() {\n\t                \t\t\tvar normalizeMoment = function(m) {\n\t                \t\t    \tif (!m) {\n\t                \t\t    \t\treturn undefined;\n\t                \t\t    \t}\n\t                \t\t    \t\n\t                \t\t    \tif (scope.useUtc) {\n\t                \t\t    \t\tm = moment.utc([m.year(), m.month(), m.date()]);\n\t                \t\t    \t\n\t                \t\t    \t} else if (scope.utcOffset) {\n\t                \t\t    \t\tm = moment.utc([m.year(), m.month(), m.date()]).utcOffset(scope.utcOffset, true);\n\t                \t\t    \t}\n\t                \t\t    \t\n\t                \t\t    \treturn m;\n\t                \t\t    };\n\t                \t\t\t\n\t                \t\t\tvar selectedMoment = normalizeMoment(moment(selectedDate));\n\t                \t\t\tvar minMoment = scope.minDate ? normalizeMoment(moment(scope.minDate)) : null;\n\t                \t\t\tvar maxMoment = scope.maxDate ? normalizeMoment(moment(scope.maxDate)) : null;\n\t                \t\t\t\n\t                \t\t\t// validate min and max date\n\t                        \tif (minMoment && maxMoment) {\n\t                        \t\tif (maxMoment.isBefore(minMoment, \"days\")) {\n\t                        \t\t\tmaxMoment = normalizeMoment(moment(minMoment)).add(1, 'days');\n\t                        \t\t}\n\t                        \t}\n\t                \t\t\t\n\t                \t\t\tif (minMoment && minMoment.isValid()) {\n\t                \t\t\t\tngModel.$setValidity('mindate', selectedMoment.isSameOrAfter(minMoment, \"days\"));\n\t                \t\t\t}\n\t                \t\t\t\n\t                \t\t\tif (maxMoment && maxMoment.isValid()) {\n\t                \t\t\t\tngModel.$setValidity('maxdate', selectedMoment.isSameOrBefore(maxMoment, \"days\"));\n\t                \t\t\t}\n\t                \t\t\t\n\t                \t\t\tscope.ngModel = selectedMoment.toDate();\n\t                          });\n\t                      });\n\t                });\n            \t}\n            }\n        }\n    };\n}]);\nfunction TimePickerCtrl($scope, $mdDialog, $mdMedia, time, autoSwitch, useUtc, utcOffset) {\n\t$scope.$mdMedia = $mdMedia;\n\t\n\tvar self = this;\n\t\n\tthis.VIEW_HOURS = 1;\n    this.VIEW_MINUTES = 2;\n    this.currentView = this.VIEW_HOURS;\n    this.autoSwitch = !!autoSwitch;\n    \n\tthis.init = function() {\n\t\t// normalize time\n    \tthis.time = this.normalizeMoment(time);\n    \tthis.clockHours = parseInt(this.time.format(\"h\"));\n        this.clockMinutes = parseInt(this.time.minutes());\t\t\n\t};\n\t\n\tthis.normalizeMoment = function(m, skipNull) {\n    \tif (!m) {\n    \t\tif (skipNull) {\n    \t\t\treturn undefined;\n    \t\t}\n    \t\t\n    \t\tm = (useUtc || utcOffset) ? moment().utc(true) : moment();\n    \t}\n    \t\n    \tif (useUtc) {\n    \t\tm = moment(m).utc();\n    \t\n    \t} else if (utcOffset) {\n    \t\tm = moment(m).utcOffset(utcOffset);\n    \t\n    \t} else {\n    \t\tm = moment.isMoment(m) ? m : moment(m);\n    \t}\n    \t\n    \treturn m;\n    };\n\t\t\n\tthis.switchView = function() {\n\t    self.currentView = self.currentView == self.VIEW_HOURS ? self.VIEW_MINUTES : self.VIEW_HOURS;\n\t};\n    \n\tthis.setAM = function() {\n        if(self.time.hours() >= 12)\n            self.time.hour(self.time.hour() - 12);\n\t};\n    \n    this.setPM = function() {\n        if(self.time.hours() < 12)\n            self.time.hour(self.time.hour() + 12);\n\t};\n\t\n\tthis.now = function() {\n\t\tself.time = this.normalizeMoment(moment());\n\t};\n    \n    this.cancel = function() {\n        $mdDialog.cancel();\n    };\n\n    this.confirm = function() {\n        $mdDialog.hide(this.time.toDate());\n    };\n    \n    // init\n    this.init();\n}\n\nfunction ClockCtrl($scope) {\n    var TYPE_HOURS = \"hours\";\n    var TYPE_MINUTES = \"minutes\";\n    var self = this;\n    \n    this.STEP_DEG = 360 / 12;\n    this.steps = [];\n    \n    this.CLOCK_TYPES = {\n        \"hours\": {\n            range: 12,\n        },\n        \"minutes\": {\n            range: 60,\n        }\n    }\n    \n    this.getPointerStyle = function() {\n        var divider = 1;\n        switch(self.type) {\n            case TYPE_HOURS:\n                divider = 12;\n                break;\n            case TYPE_MINUTES:\n                divider = 60;\n                break;\n        }  \n        var degrees = Math.round(self.selected * (360 / divider)) - 180;\n        return { \n            \"-webkit-transform\": \"rotate(\" + degrees + \"deg)\",\n            \"-ms-transform\": \"rotate(\" + degrees + \"deg)\",\n            \"transform\": \"rotate(\" + degrees + \"deg)\"\n        }\n    };\n    \n    this.setTimeByDeg = function(deg) {\n        deg = deg >= 360 ? 0 : deg;\n        var divider = 0;\n        switch(self.type) {\n            case TYPE_HOURS:\n                divider = 12;\n                break;\n            case TYPE_MINUTES:\n                divider = 60;\n                break;\n        }  \n        \n        self.setTime(\n            Math.round(divider / 360 * deg)\n        );\n    };\n    \n    this.setTime = function(time) {\n        this.selected = time;\n        \n        switch(self.type) {\n            case TYPE_HOURS:\n                if(self.time.format(\"A\") == \"PM\") time += 12;\n                this.time.hours(time);\n                break;\n            case TYPE_MINUTES:\n                if(time > 59) time -= 60;\n                this.time.minutes(time);\n                break;\n        }\n        \n    };\n    \n    this.init = function() {\n        self.type = self.type || \"hours\";\n        switch(self.type) {\n            case TYPE_HOURS:\n                for(var i = 1; i <= 12; i++)\n                    self.steps.push(i);\n                self.selected = self.time.hours() || 0;\n                if(self.selected > 12) self.selected -= 12;\n                    \n                break;\n            case TYPE_MINUTES:\n                for(var i = 5; i <= 55; i+=5)\n                    self.steps.push(i);\n                self.steps.push(0);\n                self.selected = self.time.minutes() || 0;\n                \n                break;\n        }\n    };\n    \n    this.init();\n}\n\nmodule.directive(\"mdpClock\", [\"$animate\", \"$timeout\", function($animate, $timeout) {\n    return {\n        restrict: 'E',\n        bindToController: {\n            'type': '@?',\n            'time': '=',\n            'autoSwitch': '=?'\n        },\n        replace: true,\n        template: '<div class=\"mdp-clock\">' +\n                        '<div class=\"mdp-clock-container\">' +\n                            '<md-toolbar class=\"mdp-clock-center md-primary\"></md-toolbar>' +\n                            '<md-toolbar ng-style=\"clock.getPointerStyle()\" class=\"mdp-pointer md-primary\">' +\n                                '<span class=\"mdp-clock-selected md-button md-raised md-primary\"></span>' +\n                            '</md-toolbar>' +\n                            '<md-button ng-class=\"{ \\'md-primary\\': clock.selected == step }\" class=\"md-icon-button md-raised mdp-clock-deg{{ ::(clock.STEP_DEG * ($index + 1)) }}\" ng-repeat=\"step in clock.steps\" ng-click=\"clock.setTime(step)\">{{ step }}</md-button>' +\n                        '</div>' +\n                    '</div>',\n        controller: [\"$scope\", ClockCtrl],\n        controllerAs: \"clock\",\n        link: function(scope, element, attrs, ctrl) {\n            var pointer = angular.element(element[0].querySelector(\".mdp-pointer\")),\n                timepickerCtrl = scope.$parent.timepicker;\n            \n            var onEvent = function(event) {\n                var containerCoords = event.currentTarget.getClientRects()[0];\n                var x = ((event.currentTarget.offsetWidth / 2) - (event.pageX - containerCoords.left)),\n                    y = ((event.pageY - containerCoords.top) - (event.currentTarget.offsetHeight / 2));\n\n                var deg = Math.round((Math.atan2(x, y) * (180 / Math.PI)));\n                \n                $timeout(function() {\n                    ctrl.setTimeByDeg(deg + 180);\n                    if(ctrl.autoSwitch && [\"mouseup\", \"click\"].indexOf(event.type) !== -1 && timepickerCtrl) {\n                    \tif (timepickerCtrl.currentView == timepickerCtrl.VIEW_HOURS) {\n                    \t\ttimepickerCtrl.switchView();\n                    \t}\n                    }\n                });\n            }; \n            \n            element.on(\"mousedown\", function() {\n               element.on(\"mousemove\", onEvent);\n            });\n            \n            element.on(\"mouseup\", function(e) {\n                element.off(\"mousemove\");\n            });\n            \n            element.on(\"click\", onEvent);\n            scope.$on(\"$destroy\", function() {\n                element.off(\"click\", onEvent);\n                element.off(\"mousemove\", onEvent); \n            });\n        }\n    }\n}]);\n\nmodule.provider(\"$mdpTimePicker\", function() {\n    var LABEL_OK = \"OK\",\n        LABEL_CANCEL = \"Cancel\",\n        LABEL_NOW = \"Now\";\n        \n    this.setOKButtonLabel = function(label) {\n        LABEL_OK = label;\n    };\n    \n    this.setCancelButtonLabel = function(label) {\n        LABEL_CANCEL = label;\n    };\n    \n    this.setNowButtonLabel = function(label) {\n    \tLABEL_NOW = label;\n    };\n    \n    this.$get = [\"$mdDialog\", function($mdDialog) {\n        var timePicker = function(time, options) {\n            if(!angular.isDate(time)) time = null;\n            if (!angular.isObject(options)) options = {};\n    \n            return $mdDialog.show({\n                controller:  ['$scope', '$mdDialog', '$mdMedia', 'time', 'autoSwitch', 'useUtc', 'utcOffset', TimePickerCtrl],\n                controllerAs: 'timepicker',\n                clickOutsideToClose: true,\n                skipHide: true,\n                template: '<md-dialog aria-label=\"\" class=\"mdp-timepicker\" ng-class=\"{ \\'portrait\\': !$mdMedia(\\'gt-xs\\') }\">' +\n                            '<md-dialog-content layout-gt-xs=\"row\" layout-wrap>' +\n                                '<md-toolbar layout-gt-xs=\"column\" layout-xs=\"row\" layout-align=\"center center\" flex class=\"mdp-timepicker-time md-hue-1 md-primary\">' +\n                                    '<div class=\"mdp-timepicker-selected-time\">' +\n                                        '<span ng-class=\"{ \\'active\\': timepicker.currentView == timepicker.VIEW_HOURS }\" ng-click=\"timepicker.currentView = timepicker.VIEW_HOURS\">{{ timepicker.time.format(\"h\") }}</span>:' + \n                                        '<span ng-class=\"{ \\'active\\': timepicker.currentView == timepicker.VIEW_MINUTES }\" ng-click=\"timepicker.currentView = timepicker.VIEW_MINUTES\">{{ timepicker.time.format(\"mm\") }}</span>' +\n                                    '</div>' +\n                                    '<div layout=\"column\" class=\"mdp-timepicker-selected-ampm\">' + \n                                        '<span ng-click=\"timepicker.setAM()\" ng-class=\"{ \\'active\\': timepicker.time.hours() < 12 }\">AM</span>' +\n                                        '<span ng-click=\"timepicker.setPM()\" ng-class=\"{ \\'active\\': timepicker.time.hours() >= 12 }\">PM</span>' +\n                                    '</div>' + \n                                '</md-toolbar>' +\n                                '<div>' +\n                                    '<div class=\"mdp-clock-switch-container\" ng-switch=\"timepicker.currentView\" layout layout-align=\"center center\">' +\n\t                                    '<mdp-clock class=\"mdp-animation-zoom\" auto-switch=\"timepicker.autoSwitch\" time=\"timepicker.time\" type=\"hours\" ng-switch-when=\"1\"></mdp-clock>' +\n\t                                    '<mdp-clock class=\"mdp-animation-zoom\" auto-switch=\"timepicker.autoSwitch\" time=\"timepicker.time\" type=\"minutes\" ng-switch-when=\"2\"></mdp-clock>' +\n                                    '</div>' +\n                                    \n                                    '<md-dialog-actions layout=\"row\">' +\n                                    \t'<md-button ng-click=\"timepicker.now()\" aria-label=\"' + LABEL_NOW + '\">' + LABEL_NOW + '</md-button>' +\n\t                                \t'<span flex></span>' +\n                                        '<md-button ng-click=\"timepicker.cancel()\" aria-label=\"' + LABEL_CANCEL + '\">' + LABEL_CANCEL + '</md-button>' +\n                                        '<md-button ng-click=\"timepicker.confirm()\" class=\"md-primary\" aria-label=\"' + LABEL_OK + '\">' + LABEL_OK + '</md-button>' +\n                                    '</md-dialog-actions>' +\n                                '</div>' +\n                            '</md-dialog-content>' +\n                        '</md-dialog>',\n                targetEvent: options.targetEvent,\n                locals: {\n                    time: time,\n                    autoSwitch: options.autoSwitch,\n                    useUtc: options.useUtc, \n                    utcOffset: options.utcOffset\n                },\n                skipHide: true\n            });\n        };\n    \n        return timePicker;\n    }];\n});\n\nmodule.directive(\"mdpTimePicker\", [\"$mdpTimePicker\", \"$timeout\", function($mdpTimePicker, $timeout) {\n    return  {\n        restrict: 'E',\n        require: 'ngModel',\n        transclude: true,\n        template: function(element, attrs) {\n            var noFloat = angular.isDefined(attrs.mdpNoFloat),\n                placeholder = angular.isDefined(attrs.mdpPlaceholder) ? attrs.mdpPlaceholder : \"\",\n                openOnClick = angular.isDefined(attrs.mdpOpenOnClick) ? true : false;\n            \n            return '<div layout layout-align=\"start start\">' +\n                    '<md-button class=\"md-icon-button\" ng-click=\"showPicker($event)\"' + (angular.isDefined(attrs.mdpDisabled) ? ' ng-disabled=\"disabled\"' : '') + '>' +\n                        '<md-icon md-svg-icon=\"mdp-access-time\"></md-icon>' +\n                    '</md-button>' +\n                    '<md-input-container' + (noFloat ? ' md-no-float' : '') + ' md-is-error=\"isError()\">' +\n                        '<input type=\"{{ ::type }}\"' + (angular.isDefined(attrs.mdpDisabled) ? ' ng-disabled=\"disabled\"' : '') + ' aria-label=\"' + placeholder + '\" placeholder=\"' + placeholder + '\"' + (openOnClick ? ' ng-click=\"showPicker($event)\" ' : '') + ' />' +\n                    '</md-input-container>' +\n                '</div>';\n        },\n        scope: {\n            \"timeFormat\": \"@mdpFormat\",\n            \"placeholder\": \"@mdpPlaceholder\",\n            \"autoSwitch\": \"=?mdpAutoSwitch\",\n            \"disabled\": \"=?mdpDisabled\",\n            \"useUtc\" : \"=?mdpUseUtc\",\n            \"utcOffset\" : \"@mdpUtcOffset\"\n        },\n        link: function(scope, element, attrs, ngModel, $transclude) {\n            var inputElement = angular.element(element[0].querySelector('input')),\n                inputContainer = angular.element(element[0].querySelector('md-input-container')),\n                inputContainerCtrl = inputContainer.controller(\"mdInputContainer\");\n                \n            $transclude(function(clone) {\n               inputContainer.append(clone); \n            });\n            \n            var messages = angular.element(inputContainer[0].querySelector(\"[ng-messages]\"));\n            \n            scope.type = scope.timeFormat ? \"text\" : \"time\"\n            scope.timeFormat = scope.timeFormat || \"HH:mm\";\n            scope.autoSwitch = scope.autoSwitch || false;\n            scope.useUtc = scope.useUtc || false;\n            \n            scope.$watch(function() { return ngModel.$error }, function(newValue, oldValue) {\n                inputContainerCtrl.setInvalid(!ngModel.$pristine && !!Object.keys(ngModel.$error).length);\n            }, true);\n            \n            // update input element if model has changed\n            ngModel.$formatters.unshift(function(value) {\n                var time = angular.isDate(value) && moment(value);\n                if(time && time.isValid()) \n                    updateInputElement(time.format(scope.timeFormat));\n                else\n                    updateInputElement(null);\n            });\n            \n            ngModel.$validators.format = function(modelValue, viewValue) {\n                return !viewValue || angular.isDate(viewValue) || moment(viewValue, scope.timeFormat, true).isValid();\n            };\n            \n            ngModel.$validators.required = function(modelValue, viewValue) {\n                return angular.isUndefined(attrs.required) || !ngModel.$isEmpty(modelValue) || !ngModel.$isEmpty(viewValue);\n            };\n            \n            ngModel.$parsers.unshift(function(value) {\n                var parsed = moment(value, scope.timeFormat, true);\n                if(parsed.isValid()) {\n                    if(angular.isDate(ngModel.$modelValue)) {\n                        var originalModel = moment(ngModel.$modelValue);\n                        originalModel.minutes(parsed.minutes());\n                        originalModel.hours(parsed.hours());\n                        originalModel.seconds(parsed.seconds());\n                        \n                        parsed = originalModel;\n                    }\n                    return parsed.toDate(); \n                } else\n                    return null;\n            });\n            \n            // update input element value\n            function updateInputElement(value) {\n                inputElement[0].value = value;\n                inputContainerCtrl.setHasValue(!ngModel.$isEmpty(value));\n            }\n            \n            function normalizeMoment(m) {\n            \tif (!m) {\n            \t\treturn undefined;\n            \t}\n            \t\n            \tif (scope.useUtc) {\n            \t\tm = moment(m).utc();\n            \t\n            \t} else if (scope.utcOffset) {\n            \t\tm = moment(m).utcOffset(scope.utcOffset);\n            \t}\n            \t\n            \treturn m;\n            };\n            \n            function updateTime(time) {\n                var value = normalizeMoment(moment(time, angular.isDate(time) ? null : scope.timeFormat, true)),\n                    strValue = value.format(scope.timeFormat);\n\n                if(value.isValid()) {\n                    updateInputElement(strValue);\n                    ngModel.$setViewValue(strValue);\n                } else {\n                    updateInputElement(time);\n                    ngModel.$setViewValue(time);\n                }\n                \n                if(!ngModel.$pristine && \n                    messages.hasClass(\"md-auto-hide\") && \n                    inputContainer.hasClass(\"md-input-invalid\")) messages.removeClass(\"md-auto-hide\");\n                \n                ngModel.$render();\n            }\n                \n            scope.showPicker = function(ev) {\n                $mdpTimePicker(ngModel.$modelValue, {\n                    targetEvent: ev,\n                    autoSwitch: scope.autoSwitch,\n                    useUtc: scope.useUtc,\n                    utcOffset: scope.utcOffset\n                    \n                }).then(function(time) {\n                    updateTime(time, true);\n                });\n            };\n            \n            function onInputElementEvents(event) {\n                if(event.target.value !== ngModel.$viewVaue)\n                    updateTime(event.target.value);\n            }\n            \n            inputElement.on(\"reset input blur\", onInputElementEvents);\n            \n            scope.$on(\"$destroy\", function() {\n                inputElement.off(\"reset input blur\", onInputElementEvents);\n            })\n        }\n    };\n}]);\n\nmodule.directive(\"mdpTimePicker\", [\"$mdpTimePicker\", \"$timeout\", function($mdpTimePicker, $timeout) {\n    return  {\n        restrict: 'A',\n        require: 'ngModel',\n        scope: {\n            \"timeFormat\": \"@mdpFormat\",\n            \"useMobile\" : \"=mdpUseMobile\",\n        \t\"autoSwitch\" : \"=?mdpAutoSwitch\",\n        \t\"useUtc\" : \"=?mdpUseUtc\",\n            \"utcOffset\" : \"@mdpUtcOffset\"\n        },\n        link: function(scope, element, attrs, ngModel, $transclude) {\n        \tif ('undefined' !== typeof attrs.type && 'time' === attrs.type && ngModel \n        \t\t\t&& 'undefined' !== typeof scope.useMobile && scope.useMobile && detect.parse(navigator.userAgent).device.type.toLowerCase() === \"mobile\") {\n        \t\t// use mobile-system default picker\n        \t\t\n        \t} else {        \t\n\t            scope.timeFormat = scope.timeFormat || \"HH:mm\";\n\t            scope.autoSwitch = scope.autoSwitch || false;\n\t            scope.useUtc = scope.useUtc || false;\n\t            \n\t            var showPicker = function(ev) {\n\t                $mdpTimePicker(ngModel.$modelValue, {\n\t                    targetEvent: ev,\n\t                    autoSwitch: scope.autoSwitch,\n\t                    useUtc: scope.useUtc,\n\t                    utcOffset: scope.utcOffset\n\t                    \n\t                }).then(function(time) {\n\t                \tvar normalizeMoment = function(m) {\n\t    \t            \tif (!m) {\n\t    \t            \t\treturn undefined;\n\t    \t            \t}\n\t    \t            \t\n\t    \t            \tif (scope.useUtc) {\n\t    \t            \t\tm = moment(m).utc();\n\t    \t            \t\n\t    \t            \t} else if (scope.utcOffset) {\n\t    \t            \t\tm = moment(m).utcOffset(scope.utcOffset);\n\t    \t            \t}\n\t    \t            \t\n\t    \t            \treturn m;\n\t    \t            };\n\t    \t            \n\t                    ngModel.$setViewValue(normalizeMoment(moment(time)).format(scope.timeFormat));\n\t                    ngModel.$render();\n\t                });\n\t            };\n\t            \n\t            element.on(\"click\", showPicker);\n\t            \n\t            scope.$on(\"$destroy\", function() {\n\t                element.off(\"click\", showPicker);\n\t            });\n        \t}\n        }\n    }\n}]);\n})();"],"sourceRoot":"/source/"}